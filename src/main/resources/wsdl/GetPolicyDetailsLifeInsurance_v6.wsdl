<?xml version = "1.0" encoding = "UTF-8"?>
<wsdl:definitions name = "Policy_3_GetPolicyDetails_1" targetNamespace = "http://nn.nl/XSD/LifeRetailCB/Policy/LifeRetailCBPolicy/3/GetPolicyDetailsLifeInsurance/1" xmlns:fault = "http://nn.nl/XSD/SOAPFault" xmlns:jms = "http://www.tibco.com/namespaces/ws/2004/soap/binding/JMS" xmlns:jndi = "http://www.tibco.com/namespaces/ws/2004/soap/apis/jndi" xmlns:ns1 = "http://www.bsb.com/is/xml/traditionallife/service/policy/detail" xmlns:ns2 = "http://www.bsb.com/is/xml/core/model/util/exception" xmlns:ns3 = "http://schemas.xmlsoap.org/soap/http" xmlns:ns5 = "http://nn.nl/XSD/LifeRetailCB/Policy/LifeRetailCBPolicy/3/GetPolicyDetailsLifeInsurance/1" xmlns:ns6 = "http://nn.nl/XSD/Generic/MessageHeader/1" xmlns:soap = "http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns = "http://nn.nl/XSD/LifeRetailCB/Policy/LifeRetailCBPolicy/3/GetPolicyDetailsLifeInsurance/1" xmlns:wsdl = "http://schemas.xmlsoap.org/wsdl/" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
	<wsdl:types>
		<xsd:schema attributeFormDefault = "unqualified" elementFormDefault = "qualified" targetNamespace = "http://nn.nl/XSD/Generic/MessageHeader/1" xmlns = "http://nn.nl/XSD/Generic/MessageHeader/1" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:element name = "MessageHeader" type = "MessageHeaderType"/>
			<xsd:element name = "Result" type = "ResultType"/>
			<xsd:complexType name = "MessageHeaderType">
				<xsd:sequence>
					<xsd:element name = "From" type = "ProducingEndpointType"/>
					<xsd:element name = "To" type = "ConsumingEndpointType"/>
					<xsd:element name = "HeaderFields" type = "HeaderFieldType"/>
					<xsd:element minOccurs = "0" name = "ConnectionInfo" type = "ConnectionInfoType"/>
					<xsd:element name = "Service" type = "ServiceType"/>
					<xsd:element minOccurs = "0" name = "TraceHeaderList" type = "TraceHeaderListType"/>
					<xsd:element minOccurs = "0" name = "TransactionList" type = "TransactionListType"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "ProducingEndpointType">
				<xsd:sequence>
					<xsd:element name = "Id" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Unique identification of the initiator.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "Location" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Destination of the endpoint of the initiator. Use when discriminating the Id with an location is of importance.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "ConsumingEndpointType">
				<xsd:sequence>
					<xsd:element minOccurs = "0" name = "Id" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Unique identification of the endpoint being invoked.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "Location" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Destination of the endpoint being invoked.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "HeaderFieldType">
				<xsd:sequence>
					<xsd:element name = "CPAId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Collaboration Protocol Agreement ID provided by the initiator of the business value chain of Transactions.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "ConversationId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Global Unique IDdentifier (GUID) for the one particular Conversation a message participates in.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "MessageId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Global Unique Identifier (GUID) for this message within the scope of the Conversation (see above).</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "CorrelationId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Contains the 
 MessageId as part of the response in order to correlate two messages as part of the same MEP.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "ExternalRefToMessageId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Unique identifier referring to an id passed from an external (front-end) system. This often uniquely identifies the Transaction as known with the initiator.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "Timestamp" type = "xsd:dateTime">
						<xsd:annotation>
							<xsd:documentation>Date and time message was sent, including the time zone.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "HeaderProperties" type = "PropertiesType">
						<xsd:annotation>
							<xsd:documentation>Used as extension on the HeaderFields for future use without backwards compatibility issues in existing implementations.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "PropertiesType">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" name = "HeaderProperty" type = "HeaderPropertyType">
						<xsd:annotation>
							<xsd:documentation>Repeating structure to accommodate extra properties</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "HeaderPropertyType">
				<xsd:attribute name = "Name" type = "xsd:string" use = "required">
					<xsd:annotation>
						<xsd:documentation>Attribute describing the name of the property</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name = "Value" type = "xsd:string" use = "required">
					<xsd:annotation>
						<xsd:documentation>Attribute describing the value of the property</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:complexType>
			<xsd:complexType name = "ConnectionInfoType">
				<xsd:annotation>
					<xsd:documentation/>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element minOccurs = "0" name = "Principal" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>ID or name of the front-end system or application</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "RemoteAddress" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>System name, Full Qualified Domain Name (FQDN) or IP address of the front-end system. Typically used for black-listing or for some investigation purposed.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "ServiceType">
				<xsd:sequence>
					<xsd:element name = "Name" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>The name of the service being invoked</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "Context" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>The name of the service context being invoked.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "Action" type = "ActionType">
						<xsd:annotation>
							<xsd:documentation>Identification of the action being performed</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "ActionType">
				<xsd:sequence>
					<xsd:element name = "Paradigm">
						<xsd:annotation>
							<xsd:documentation>Identification of the paradigm, can be Request, Response, Event, Action, Solicit, Notification</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base = "xsd:string">
								<xsd:enumeration value = "Request"/>
								<xsd:enumeration value = "Response"/>
								<xsd:enumeration value = "Event"/>
								<xsd:enumeration value = "Action"/>
								<xsd:enumeration value = "Solicit"/>
								<xsd:enumeration value = "Notification"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name = "Name" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>The name of the operation being invoked.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "Version" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>The major version of the operation being invoked.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "TraceHeaderListType">
				<xsd:annotation>
					<xsd:documentation>The ԔraceHeaderListԠpart of the message is used to carry over parts of the header while invoking another operation or service. When a service is composed of multiple other services each header that is received will make up one element in the TraceHeaderList. A new TraceHeader entry is added to the bottom of the list. The newest entry is the lowest entry in a list. </xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" name = "TraceHeader" type = "TraceHeaderType"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "TraceHeaderType">
				<xsd:sequence>
					<xsd:element name = "Sender" type = "ProducingEndpointType">
						<xsd:annotation>
							<xsd:documentation>This is a copy of the From element</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "Receiver" type = "ConsumingEndpointType">
						<xsd:annotation>
							<xsd:documentation>This is a copy of the To element</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "Service" type = "ServiceType">
						<xsd:annotation>
							<xsd:documentation>This is a copy of the Service element</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "MessageData" type = "MessageDataType">
						<xsd:annotation>
							<xsd:documentation>This element contains a copy of certain fields of the HeaderFields element</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "MessageDataType">
				<xsd:sequence>
					<xsd:element name = "MessageId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Unique Identifier for this message within the scope of the Conversation (see above). This is a copy of.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "Timestamp" type = "xsd:dateTime">
						<xsd:annotation>
							<xsd:documentation>Date and time message was sent, including the time zone. This is a copy of.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "RefToMessageId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Unique identifier referring to an id passed from an external (front-end) system. This is a copy of.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "Status" type = "StatusType"/>
					<xsd:element minOccurs = "0" name = "Retry_Option" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>A boolean indicating if the invocation can be retried</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "TransactionListType">
				<xsd:annotation>
					<xsd:documentation>The TransactionList part of the message holds information regarding the transaction the message is part of. This part should ONLY be used for SOx or other regulatory compliance requirements that have been identified for a certain service or system interface. A new Transaction entry is added to the bottom of the list. The newest entry is the lowest entry in a list.</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" name = "Transaction" type = "TransactionType">
						<xsd:annotation>
							<xsd:documentation>For each transaction a new Transaction is added to bottom of the TransactionList.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "TransactionType">
				<xsd:sequence>
					<xsd:element name = "Interaction">
						<xsd:annotation>
							<xsd:documentation>When a system is called that is not part of the ESB or SOA platform, this field will hold the value Frontend or Backend respective to the type of system that is called</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base = "xsd:string">
								<xsd:enumeration value = "Frontend"/>
								<xsd:enumeration value = "Backend"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name = "TransactionId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>The unique identification used as reference when a Transaction enters or leaves the ESB.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "MessageId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>The identification of the message. Must be unique within the TransactionList when multiple calls to external system </xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "SystemId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>The unique identification of the external system</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "Timestamp" type = "xsd:dateTime">
						<xsd:annotation>
							<xsd:documentation>Date and time the message was sent to or received from the external system</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "ResultType">
				<xsd:sequence>
					<xsd:element name = "Status" type = "StatusType"/>
					<xsd:element minOccurs = "0" name = "ErrorList" type = "ErrorListType">
						<xsd:annotation>
							<xsd:documentation>Element which is the parent of all errors elements. Will only be present if the status equals ERROR</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "ErrorListType">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" name = "Error" type = "ErrorType"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "ErrorType">
				<xsd:sequence>
					<xsd:element name = "Code" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Canonical error code with fixed value. </xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "Reason" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Canonical reason description of the canonical error. It provides the reason why an error has occurred.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "Service" type = "ServiceType">
						<xsd:annotation>
							<xsd:documentation>Description in which service and operation the error occurred.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "DetailList" type = "DetailListType">
						<xsd:annotation>
							<xsd:documentation>List of specific non canonical errors.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "DetailListType">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" name = "Detail" type = "DetailType"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "DetailType">
				<xsd:sequence>
					<xsd:element name = "Code" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Service specific error code</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "SubCode" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Application specific error code</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "Text" type = "TextType">
						<xsd:annotation>
							<xsd:documentation>Detailed description of the error that occurred.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "TextType">
				<xsd:attribute name = "language" type = "xsd:string">
					<xsd:annotation>
						<xsd:documentation>Detailing the language of the error based on ISO 639-1 Code.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:complexType>
			<xsd:simpleType name = "StatusType">
				<xsd:annotation>
					<xsd:documentation>A string indicating if the invocation was successful or not. The field may have the value OK or ERROR</xsd:documentation>
				</xsd:annotation>
				<xsd:restriction base = "xsd:string">
					<xsd:enumeration value = "OK"/>
					<xsd:enumeration value = "ERROR"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:schema>
		<!--
***********************************************************************
				SCHEMA types used in messages
***********************************************************************
-->
		<xsd:schema elementFormDefault = "qualified" targetNamespace = "http://nn.nl/XSD/LifeRetailCB/Policy/LifeRetailCBPolicy/3/GetPolicyDetailsLifeInsurance/1" xmlns = "http://nn.nl/XSD/LifeRetailCB/Policy/LifeRetailCBPolicy/3/GetPolicyDetailsLifeInsurance/1" xmlns:agg = "http://www.bsb.com/is/xml/aggregation/model/traditionallife/policy/detail" xmlns:ccla = "http://www.bsb.com/is/xml/core/model/clause" xmlns:cla = "http://www.bsb.com/is/xml/traditionallife/model/clause" xmlns:pol = "http://www.bsb.com/is/xml/traditionallife/model/policy" xmlns:rep = "http://www.bsb.com/is/xml/core/model/util/report" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/util/report"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/traditionallife/model/policy"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/aggregation/model/traditionallife/policy/detail"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/clause"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/traditionallife/model/clause"/>
			<xsd:element name = "GetPolicyDetailsLifeInsuranceRequest">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name = "Services">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name = "getPolicyClauses" type = "xsd:boolean"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element maxOccurs = "1" minOccurs = "1" name = "policyNumber" type = "xsd:string"/>
						<xsd:element maxOccurs = "1" minOccurs = "0" name = "detailFilter" type = "detailFilter"/>
						<xsd:element maxOccurs = "1" minOccurs = "0" name = "exclusionClausesConfidentialityLevel" type = "xsd:string"/>
						<xsd:element maxOccurs = "1" minOccurs = "0" name = "includeEndorsedBaseCapitalValues" type = "xsd:boolean"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name = "detailFilter" type = "detailFilter"/>
			<xsd:complexType name = "detailFilter">
				<xsd:choice>
					<xsd:element name = "noFilter">
						<xsd:annotation>
							<xsd:documentation>Do not filter, get them all</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element ref = "agg:detailTypeList"/>
				</xsd:choice>
			</xsd:complexType>
			<xsd:element name = "GetPolicyDetailsLifeInsuranceResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element minOccurs = "0" name = "TradLifePolicyAggregatedDetailReport" type = "rep:Report"/>
						<xsd:element minOccurs = "0" name = "clausesReport" type = "rep:Report"/>
						<xsd:element name = "aggregatedPolicyDetails" type = "agg:TradLifePolicyAggregatedDetail"/>
						<xsd:element minOccurs = "0" name = "clauses">
							<xsd:complexType>
								<xsd:sequence maxOccurs = "unbounded" minOccurs = "0">
									<xsd:element name = "clause" type = "ccla:Clause"/>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:schema>
		<xsd:schema elementFormDefault = "qualified" targetNamespace = "http://nn.nl/XSD/SOAPFault" xmlns = "http://nn.nl/XSD/SOAPFault" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:element name = "SOAPFault" type = "SOAPFault"/>
			<xsd:complexType name = "SOAPFault">
				<xsd:sequence>
					<xsd:element name = "faultcode" type = "xsd:string"/>
					<xsd:element name = "faultstring" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "faultactor" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "detail" type = "SOAPFaultDetails"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "SOAPFaultDetails">
				<xsd:sequence>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "BusinessDomain" type = "xsd:string"/>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "ServiceName" type = "xsd:string"/>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "ServiceContext" type = "xsd:string"/>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "ServiceContextVersion" type = "xsd:string"/>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "OperationName" type = "xsd:string"/>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "OperationVersion" type = "xsd:string"/>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:schema>
		<!--
***********************************************************************
   SOLIFE SCHEMA's - Don't modify
***********************************************************************
-->
		
		<!--
CLAUSES
-->
		<xsd:schema attributeFormDefault = "unqualified" elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/core/model/util/wording" xmlns = "http://www.bsb.com/is/xml/core/model/util/wording" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:complexType name = "WordingText">
				<xsd:annotation>
					<xsd:documentation>An internationalized description in several
				locales (languages)
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "wording" nillable = "true">
						<xsd:annotation>
							<xsd:documentation>A description text in a specific locale
						(language)
							</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:simpleContent>
								<xsd:extension base = "xsd:string">
									<xsd:attribute name = "locale" type = "xsd:string" use = "required">
										<xsd:annotation>
											<xsd:documentation>The Locale abstract code: EN, FR, FR_FR, DE,
										NL...
											</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
								</xsd:extension>
							</xsd:simpleContent>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:schema>
		<xsd:schema attributeFormDefault = "unqualified" elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/core/model/util/report" xmlns = "http://www.bsb.com/is/xml/core/model/util/report" xmlns:wdg = "http://www.bsb.com/is/xml/core/model/util/wording" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/util/wording"/>
			<xsd:complexType name = "Report">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "reportMessage">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name = "msgId" type = "xsd:string"/>
								<xsd:element name = "level" type = "xsd:string"/>
								<xsd:element name = "origin" type = "xsd:string"/>
								<xsd:element name = "wordingText" type = "wdg:WordingText"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:schema>
		<xsd:schema attributeFormDefault = "unqualified" elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/integration/model/util/wording" xmlns = "http://www.bsb.com/is/xml/integration/model/util/wording" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:complexType name = "WordingText">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" name = "wording">
						<xsd:complexType>
							<xsd:simpleContent>
								<xsd:extension base = "xsd:string">
									<xsd:attribute name = "locale" type = "xsd:string" use = "required"/>
								</xsd:extension>
							</xsd:simpleContent>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute name = "externalID" type = "xsd:string" use = "optional"/>
			</xsd:complexType>
		</xsd:schema>
		<xsd:schema attributeFormDefault = "unqualified" elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/appinterface/model/util/parameter" xmlns = "http://www.bsb.com/is/xml/appinterface/model/util/parameter" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:element name = "ComplexParameterValue" type = "ComplexParameterValue"/>
			<xsd:complexType name = "ComplexParameterValue">
				<xsd:annotation>
					<xsd:documentation>Complex parameter value definition</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence/>
			</xsd:complexType>
			<xsd:element name = "PersonParameterValue" type = "PersonParameterValue"/>
			<xsd:complexType name = "PersonParameterValue">
				<xsd:annotation>
					<xsd:documentation>Person parameter value definition</xsd:documentation>
				</xsd:annotation>
				<xsd:complexContent>
					<xsd:extension base = "ComplexParameterValue">
						<xsd:sequence>
							<xsd:element name = "lastName" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Person name</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "firstName" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Person first name</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "birthDate" type = "xsd:date">
								<xsd:annotation>
									<xsd:documentation>Person birth date</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "genderCodeId" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Person gender</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "languageCodeId" nillable = "true" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Person language</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
						<xsd:attribute name = "InternalId" type = "xsd:string">
							<xsd:annotation>
								<xsd:documentation>InternalID is a unique internal ID
							(within Solife,generated if needed)
								</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
						<xsd:attribute name = "SynchronizationID" type = "xsd:string">
							<xsd:annotation>
								<xsd:documentation>SynchID is a unique external ID to represent the
							third party (repository outside of Solife)
								</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
						<xsd:attribute name = "XmlReference" type = "xsd:string" use = "optional">
							<xsd:annotation>
								<xsd:documentation>Reference to a ThirdParty defined somewhere else within the XML data.
             
								</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
						<xsd:attribute name = "isAnonymous" type = "xsd:boolean">
							<xsd:annotation>
								<xsd:documentation>Indicates if the person is an anonymous person (birth date and gender only).</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
						<xsd:attribute default = "false" name = "isPersonLight" type = "xsd:boolean">
							<xsd:annotation>
								<xsd:documentation>Indicates if the person stored in the parameter represent a person light or a third party ?</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:element name = "MoralPersonParamValue" type = "MoralPersonParamValue"/>
			<xsd:complexType name = "MoralPersonParamValue">
				<xsd:annotation>
					<xsd:documentation>Person parameter value definition</xsd:documentation>
				</xsd:annotation>
				<xsd:complexContent>
					<xsd:extension base = "ComplexParameterValue">
						<xsd:sequence>
							<xsd:element minOccurs = "0" name = "CompanyLegalForm" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Company Legal Form</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element minOccurs = "0" name = "CompanyStatus" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Company Status</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element minOccurs = "0" name = "tradeRegister" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Identity Doc Type</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
						<xsd:attribute name = "InternalId" type = "xsd:string">
							<xsd:annotation>
								<xsd:documentation>InternalID is a unique internal ID
                            (within Solife,generated if needed)
								</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
						<xsd:attribute name = "SynchronizationID" type = "xsd:string">
							<xsd:annotation>
								<xsd:documentation>SynchID is a unique external ID to represent the
                            third party (repository outside of Solife)
								</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
						<xsd:attribute name = "XmlReference" type = "xsd:string" use = "optional">
							<xsd:annotation>
								<xsd:documentation>Reference to a ThirdParty defined somewhere else within the XML data.
                        
								</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
		</xsd:schema>
		<xsd:schema elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/core/model/util/parameter" xmlns = "http://www.bsb.com/is/xml/core/model/util/parameter" xmlns:cpar = "http://www.bsb.com/is/xml/appinterface/model/util/parameter" xmlns:wdg = "http://www.bsb.com/is/xml/core/model/util/wording" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:import namespace = "http://www.bsb.com/is/xml/appinterface/model/util/parameter"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/util/wording"/>
			<xsd:complexType name = "ExtendedParameterValue">
				<xsd:sequence>
					<xsd:element name = "possibleValues">
						<xsd:annotation>
							<xsd:documentation>Holder for the new experimental list of value
						(list of string) parameter type.
							</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence maxOccurs = "unbounded" minOccurs = "0">
								<xsd:element name = "item" type = "LovParameterItem">
									<xsd:annotation>
										<xsd:documentation>One item in the list of possible string
									values
										</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "LovParameterItem">
				<xsd:annotation>
					<xsd:documentation>One item in the list of possible string values</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name = "value" type = "xsd:anySimpleType">
						<xsd:annotation>
							<xsd:documentation>A single string value (more general type for
						future extensions)
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "wordingText" type = "wdg:WordingText">
						<xsd:annotation>
							<xsd:documentation>A i18n'd description of the item, displayed in a
						combobox / picklist for selection inside eSolife
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "GenericParameter">
				<xsd:annotation>
					<xsd:documentation>A Generic parameter</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name = "parameterId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Id of the parameter, like startDate</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "parameterType" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>A ParameterType hardcode: AMOUNT, INTEGER, DATE,
						DECIMAL, STRING, BOOLEAN...
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "isMandatory" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>True iff the parameter is mandatory</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "isCollection" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>True for parameters representing a collection
						(ex Person)
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "isAdvanced" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>An advanced parameter is not showed by default
						in eSolife for simplicity
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "isCapital" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>True for the special parameter representing a
						capital amount
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "isEditable" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>true unless the parameter is protected and read
						only
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "wordingText" type = "wdg:WordingText">
						<xsd:annotation>
							<xsd:documentation>i18n'd parameter description</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "parameterValue" nillable = "false" type = "parameterValue">
						<xsd:annotation>
							<xsd:documentation>Generic value of the parameter, depending on the
						parameter type (string, int, float, date...)
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "extendedParameter" type = "ExtendedParameterValue">
						<xsd:annotation>
							<xsd:documentation>Experimental support for extended parameter
						types like list of values. Only supported in read-only mode for
						eSolife usage.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "parameterValue">
				<xsd:sequence>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "simpleValueList" nillable = "true" type = "simpleValueList"/>
					<xsd:element minOccurs = "0" name = "complexValueList" type = "complexValueList"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "simpleValueList">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "1" name = "simpleValue" type = "xsd:anySimpleType">
						<xsd:annotation>
							<xsd:documentation>A simple value (string, date etc). Typed as a
						collection for future extension (no support for list-typed
						parameters on the WS layer)
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "complexValueList">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "1" name = "complexValue" type = "cpar:ComplexParameterValue">
						<xsd:annotation>
							<xsd:documentation>A complex parameter (person, fund ...). Typed
						as a collection to support collection typed parameter
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "GenericParameterList">
				<xsd:annotation>
					<xsd:documentation>A list of GenericParameters.</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "parameter" type = "GenericParameter"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "InputParameter">
				<xsd:annotation>
					<xsd:documentation>Generic parameter for input: only name and value
				required. The type should be inferred from context (ex inside a
				policy, the list of parameter names / IDs is fixed, each with a
				given type).
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name = "parameterName" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Parameter name / ID. Ex startDate</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "parameterValue" type = "parameterValue">
						<xsd:annotation>
							<xsd:documentation>The parameter value, restricted to simple types.
						No support for complex types is scheduled (prevents trying to
						create new items in experimental string list parameter types)
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "InputParameterList">
				<xsd:annotation>
					<xsd:documentation>A list of generic parameter, used as input.</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "parameter" type = "InputParameter"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "ParameterModificationInput">
				<xsd:annotation>
					<xsd:documentation>Generic parameter for input: only name and value
				required. The type should be inferred from context (ex inside a
				policy, the list of parameter names / IDs is fixed, each with a
				given type).
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name = "parameterName" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Parameter name / ID. Ex startDate</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "parameterValue" type = "parameterValue">
						<xsd:annotation>
							<xsd:documentation>The parameter value, restricted to simple types.
						No support for complex types is scheduled (prevents trying to
						create new items in experimental string list parameter types)
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "1" name = "type" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>A ParameterType hardcode, possibly inferred from
						context (for a Policy object, the list of parameter names / IDs is
						fixed, and so is the type). Example: AMOUNT, INTEGER, DATE,
						DECIMAL, STRING, BOOLEAN...
	                
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "ParameterListModificationInput">
				<xsd:annotation>
					<xsd:documentation>A list of generic parameter, used as input.</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "parameter" type = "InputParameter"/>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:schema>
		<xsd:schema elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/integration/model/customfields" xmlns = "http://www.bsb.com/is/xml/integration/model/customfields" xmlns:par = "http://www.bsb.com/is/xml/core/model/util/parameter" xmlns:wdg = "http://www.bsb.com/is/xml/integration/model/util/wording" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:import namespace = "http://www.bsb.com/is/xml/integration/model/util/wording"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/util/parameter"/>
			<xsd:element name = "CustomFieldList" type = "CustomFieldList"/>
			<xsd:complexType name = "CustomFieldList">
				<xsd:annotation>
					<xsd:documentation>A list of custom fields for a given business object (policy, third
			party...)
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence maxOccurs = "unbounded" minOccurs = "0">
					<xsd:element name = "CustomField" type = "CustomField"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "CustomField" type = "CustomField"/>
			<xsd:complexType name = "CustomField">
				<xsd:annotation>
					<xsd:documentation>A single custom field. Same for input and output
                for simplicity
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element minOccurs = "0" name = "value" type = "par:parameterValue">
						<xsd:annotation>
							<xsd:documentation>                        Generic value of the parameter, depending on the parameter, depending on the customfield type (string, int, float, date...)
                    
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "type" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>A ParameterType hardcode, possibly inferred from
                        context (for a Policy object, the list of parameter names / IDs is
                        fixed, and so is the type). Example: AMOUNT, INTEGER, DATE,
                        DECIMAL, STRING, BOOLEAN...
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "isMandatory" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>True iff the custom field is mandatory</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "isEditable" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>true unless the custom field is protected and
                        read only
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "wordingText" type = "wdg:WordingText">
						<xsd:annotation>
							<xsd:documentation>i18n'd custom field description</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<!--
                No support for new experimental Generic Parameter LoV type in custom
                fields
            -->
				</xsd:sequence>
				<xsd:attribute name = "name" type = "xsd:string" use = "required">
					<xsd:annotation>
						<xsd:documentation>The custom field name / ID, required</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:complexType>
			<!-- input modification elements -->
			<xsd:element name = "CustomFieldInputList" type = "CustomFieldInputList"/>
			<xsd:complexType name = "CustomFieldInputList">
				<xsd:annotation>
					<xsd:documentation>A list of custom fields for a given business
				object (policy, third
				party...)
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence maxOccurs = "unbounded" minOccurs = "0">
					<xsd:element name = "CustomFieldInput" type = "CustomFieldInput"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "CustomFieldInput">
				<xsd:annotation>
					<xsd:documentation>A single custom field. Short version for input.</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element minOccurs = "0" name = "value" type = "xsd:anySimpleType">
						<xsd:annotation>
							<xsd:documentation>Simple type value for the custom field, based on
						type. Required.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "1" name = "type" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>A ParameterType hardcode, possibly inferred from
	        					context (for a Policy object, the list of parameter names / IDs is
	        					fixed, and so is the type). Example: AMOUNT, INTEGER, DATE,
 	        					DECIMAL, STRING, BOOLEAN...
	        
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<!-- No support for new experimental Generic Parameter LoV type in custom fields -->
				</xsd:sequence>
				<xsd:attribute name = "name" type = "xsd:string" use = "required">
					<xsd:annotation>
						<xsd:documentation>The custom field name / ID, required</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:complexType>
		</xsd:schema>
		<xsd:schema attributeFormDefault = "unqualified" elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/core/model/util/amount" xmlns = "http://www.bsb.com/is/xml/core/model/util/amount" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:element name = "Amount" type = "Amount"/>
			<xsd:complexType name = "Amount">
				<xsd:annotation>
					<xsd:documentation>A monetary amount, ie a number and currency</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleContent>
					<xsd:extension base = "xsd:decimal">
						<xsd:attribute name = "ccy" type = "xsd:string">
							<xsd:annotation>
								<xsd:documentation>The currency ISO code like EUR, USD etc</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>
			<xsd:complexType name = "RegularAmount">
				<xsd:sequence>
					<xsd:element name = "amount" type = "xsd:decimal"/>
					<xsd:element name = "currency" type = "xsd:string"/>
					<xsd:element name = "startDate" type = "xsd:date"/>
					<xsd:element name = "endDate" type = "xsd:date"/>
					<xsd:element name = "frequencyCodeId" type = "xsd:string"/>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:schema>
		<xsd:schema elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/core/model/questionnaire" xmlns = "http://www.bsb.com/is/xml/core/model/questionnaire" xmlns:par = "http://www.bsb.com/is/xml/core/model/util/parameter" xmlns:wdg = "http://www.bsb.com/is/xml/core/model/util/wording" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/util/wording"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/util/parameter"/>
			<xsd:element name = "QuestionnaireList" type = "QuestionnaireList"/>
			<xsd:complexType name = "QuestionnaireList">
				<xsd:sequence>
					<xsd:element minOccurs = "0" name = "ThirdParty" type = "xsd:string"/>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "Questionnaire" type = "Questionnaire"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "Questionnaire" type = "Questionnaire"/>
			<xsd:complexType name = "Questionnaire">
				<xsd:sequence>
					<xsd:element name = "name" type = "xsd:string"/>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "wordingText" type = "wdg:WordingText"/>
					<xsd:element minOccurs = "0" name = "ServiceIdentifier" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>If the questionnaire is linked to a service, then this should be filled with the identifier of that service.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "ServiceType" type = "ServiceType">
						<xsd:annotation>
							<xsd:documentation>The type of the service - INVESTMENT or COVERAGE.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "expiryDate" type = "xsd:date"/>
					<xsd:element minOccurs = "0" name = "confidentialityLevelCodeId" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "validityDurationNumber" type = "xsd:integer"/>
					<xsd:element minOccurs = "0" name = "validityDurationUnitCodeId" type = "xsd:string"/>
					<xsd:element name = "questionnaireVersion" type = "xsd:integer"/>
					<xsd:element name = "questions" type = "par:GenericParameterList"/>
					<xsd:element maxOccurs = "1" minOccurs = "1" name = "questionnaireType" type = "QuestionnaireType">
						<xsd:annotation>
							<xsd:documentation>Type of the questionnaire: MEDICAL, TAX</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "1" name = "isComplete" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>“true” if the questionnaire is complete i.e. all questions are answered.
                        “false” if at least one question has no answer.
                    
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "1" name = "isValid" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>“true” if the questionnaire is valid. “false” if the questionnaire is expired</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "1" name = "identifier" type = "xsd:string"/>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "completionDate" type = "xsd:date"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "QuestionnaireShortDesc">
				<xsd:sequence>
					<xsd:element name = "name" type = "xsd:string"/>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "wordingText" type = "wdg:WordingText"/>
					<xsd:element name = "questionnaireVersion" type = "xsd:integer"/>
					<xsd:element maxOccurs = "1" minOccurs = "1" name = "questionnaireType" type = "QuestionnaireType">
						<xsd:annotation>
							<xsd:documentation>Type of the questionnaire : MEDICAL,TAX</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "1" name = "isComplete" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>“true” if the questionnaire is complete i.e. all questions are answered.
                        “false” if at least one question has no answer.
                    
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "1" name = "isValid" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>“true” if the questionnaire is valid. “false” if the questionnaire is expired</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "confidentialityLevelCodeId" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "validityDurationNumber" type = "xsd:integer"/>
					<xsd:element minOccurs = "0" name = "validityDurationUnitCodeId" type = "xsd:string"/>
					<xsd:element maxOccurs = "1" minOccurs = "1" name = "identifier" type = "xsd:string"/>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "completionDate" type = "xsd:date"/>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "expiryDate" type = "xsd:date"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:simpleType name = "ServiceType">
				<xsd:restriction base = "xsd:string">
					<xsd:enumeration value = "COVERAGE"/>
					<xsd:enumeration value = "INVESTMENT"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:simpleType name = "QuestionnaireType">
				<xsd:restriction base = "xsd:string">
					<xsd:enumeration value = "MEDICAL"/>
					<xsd:enumeration value = "TAX"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:schema>
		<xsd:schema attributeFormDefault = "unqualified" elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/integration/model/address" xmlns = "http://www.bsb.com/is/xml/integration/model/address" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:complexType name = "PostalAddressShortDesc">
				<xsd:sequence>
					<xsd:element minOccurs = "0" name = "addressee" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>                  Label to be display as part of the address
                
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "street" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>                    Street name
                
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "number" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>                    Number in the street
                
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "appartmentNumber" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Appartment Number.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "zipCode" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>                    Zip code or Postal Code
                
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "city" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>                    City Name
                
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "state" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>                    State or County
                
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "countryCodeId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>                    Country Code
                
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:schema>
		<xsd:schema attributeFormDefault = "unqualified" elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/integration/model/constants" xmlns = "http://www.bsb.com/is/xml/integration/model/constants" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:simpleType name = "Gender">
				<xsd:restriction base = "xsd:string">
					<xsd:enumeration value = "MALE"/>
					<xsd:enumeration value = "FEMALE"/>
					<xsd:enumeration value = "NA"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:simpleType name = "ExternalAccountOwnerType">
				<xsd:annotation>
					<xsd:documentation>Type of external account owner (enumeration)
            
					</xsd:documentation>
				</xsd:annotation>
				<xsd:restriction base = "xsd:NMTOKEN">
					<xsd:enumeration value = "HOLDER">
						<xsd:annotation>
							<xsd:documentation>Holder owner type</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "BENEFICIARY">
						<xsd:annotation>
							<xsd:documentation>Beneficiary owner type</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "PAYEE">
						<xsd:annotation>
							<xsd:documentation>Payee owner type</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "PAYER">
						<xsd:annotation>
							<xsd:documentation>Payer owner type</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:schema>
		<xsd:schema elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/integration/model/thirdparty" xmlns = "http://www.bsb.com/is/xml/integration/model/thirdparty" xmlns:add = "http://www.bsb.com/is/xml/integration/model/address" xmlns:cf = "http://www.bsb.com/is/xml/integration/model/customfields" xmlns:que = "http://www.bsb.com/is/xml/core/model/questionnaire" xmlns:tpc = "http://www.bsb.com/is/xml/integration/model/constants" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:import namespace = "http://www.bsb.com/is/xml/integration/model/customfields"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/questionnaire"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/integration/model/address"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/integration/model/constants"/>
			<xsd:element name = "ThirdParty" type = "ThirdParty"/>
			<xsd:element name = "ThirdPartyRef" type = "ThirdPartyRef"/>
			<xsd:complexType abstract = "true" name = "ThirdParty">
				<xsd:complexContent>
					<xsd:extension base = "ThirdPartyRef">
						<xsd:sequence>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "Address" type = "Address"/>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "CustomFieldList" type = "cf:CustomFieldList">
								<xsd:annotation>
									<xsd:documentation>specific fields of the third party</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "1" name = "Name" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Last name of the person or company name</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "1" name = "SalutationId" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Code ID of the salutation (ie. MON, MAD, ...)</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "LanguageId" nillable = "false" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Code ID of the language used to communicate
								with the third party.
									</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "NationalityId" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Code ID of the nationality.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "TaxCountryId" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Code ID of the tax country, used to determine
								the tax amount.
									</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "EconomicSectorId" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Code ID of the economic sector.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "IsInspector" type = "xsd:boolean">
								<xsd:annotation>
									<xsd:documentation>If the third party has an inspector role</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "FiscalHistories" type = "FiscalHistory">
								<xsd:annotation>
									<xsd:documentation>List of Fiscal History entries linked to the third
								party
									</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "ExternalAccount" type = "ExternalAccount"/>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "syncVersion" type = "xsd:int">
								<xsd:annotation>
									<xsd:documentation>The version which working on
                            
									</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "InsuranceCardId" nillable = "true" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Insurance Card Id (unique identifier)</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "InsuranceCardActivated" nillable = "true" type = "xsd:boolean">
								<xsd:annotation>
									<xsd:documentation>Is insurance card activated</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "Deactivated" nillable = "true" type = "xsd:boolean">
								<xsd:annotation>
									<xsd:documentation>Is third party is deactivated</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "AttentionPoints" nillable = "true" type = "AttentionPoints"/>
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:element name = "ThirdPartyList" type = "ThirdPartyList"/>
			<xsd:complexType name = "ThirdPartyList">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "ThirdParty" type = "ThirdParty">            </xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "ThirdPartyRef">
				<xsd:annotation>
					<xsd:documentation>Reference to an existing Third Party, using an
				Identifier. Only one of the two IDs is required.
				If the two are used,
				they must
				refer to the same TP instance.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:attribute name = "SynchronizationID" type = "xsd:string" use = "optional">
					<xsd:annotation>
						<xsd:documentation>SynchID is a unique external ID to represent the
					third party
					(repository outside of Solife)
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name = "InternalID" type = "xsd:string" use = "optional">
					<xsd:annotation>
						<xsd:documentation>InternalID is a unique internal ID
					(within Solife,
					generated if needed)
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name = "XmlReference" type = "xsd:string" use = "optional">
					<xsd:annotation>
						<xsd:documentation>Reference to a Third Party defined somewhere else is the xml data
                
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:complexType>
			<xsd:element name = "Person" type = "Person"/>
			<xsd:complexType name = "Person">
				<xsd:annotation>
					<xsd:documentation>Represent a physical person.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexContent>
					<xsd:extension base = "ThirdParty">
						<xsd:sequence>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "GenderId" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Code ID of the thirdParty sex</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "FirstName" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>ThirdParty first name</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "CivilStatusId" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Code ID of the ThirdParty civil status ( ie:
								married, ...)
									</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "MaidenName" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Maiden name of the ThirdParty</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "BirthDate" type = "xsd:date">
								<xsd:annotation>
									<xsd:documentation>ThirdParty birth date.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "BirthCountryId" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Code ID of the ThirdParty birth country.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "BirthPlace" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>ThirdParty birth place.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "DeathDate" type = "xsd:date">
								<xsd:annotation>
									<xsd:documentation>Decease date of the Thirdparty.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "ProfessionId" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Code ID of the ThirdParty profession</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "ProfessionalStatus" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Professional Status</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "Patronymic" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>third party patronymic</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "IdentityInformation" type = "IdentityInformation">
								<xsd:annotation>
									<xsd:documentation>Identity document informations.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "MemberOfPersonnel" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Only a member of personnel can be a Solife
								user.
									</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "LegalCapacityId" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Code ID of the Thirdparty legal capacity.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "IsVip" type = "xsd:boolean">
								<xsd:annotation>
									<xsd:documentation>VIP person doesn't receive reminder's</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "VipReason" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>VIP reason - required if is VIP</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "AffinityGroup" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Identifier of the affinity group of the third party</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "MariageSettlementCodeId" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Code ID of the Thirdparty mariage settlement</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "Questionnaires" type = "que:QuestionnaireList">
								<xsd:annotation>
									<xsd:documentation>List of questionnaires linked to the third
								party
									</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "MaritalStatuses" type = "MaritalStatusList">
								<xsd:annotation>
									<xsd:documentation>List of Marital Statuses linked to the third
								party
									</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:complexType name = "LegalEntity">
				<xsd:annotation>
					<xsd:documentation>Represent a moral person.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexContent>
					<xsd:extension base = "ThirdParty">
						<xsd:sequence>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "CompanyStatusId" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Code ID of the legal entity status</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "TradeRegister" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Legal entity trade register.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "LegalFormId" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Code ID of the legal entity legal form.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "CreationDate" type = "xsd:date">
								<xsd:annotation>
									<xsd:documentation>Legal entity creation date.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "CreationPlace" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Legal entity creation place.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:complexType name = "MaritalStatusList">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "MaritalStatus" type = "MaritalStatus"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "MaritalStatus">
				<xsd:sequence>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "StartDate" type = "xsd:date">
						<xsd:annotation>
							<xsd:documentation>Start date of marital status.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "EndDate" type = "xsd:date">
						<xsd:annotation>
							<xsd:documentation>End date of marital status.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "CivilStatusId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Code ID of the ThirdParty civil status ( ie:
						married, ...)
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "MarriageSettlementId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Code ID of the Thirdparty mariage settlement.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute name = "SynchronizationID" type = "xsd:string" use = "optional">
					<xsd:annotation>
						<xsd:documentation>SynchronizationId is a unique injection/migration id</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:complexType>
			<xsd:complexType name = "FiscalHistory">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "FiscalHistoryEntry" type = "FiscalHistoryEntry"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "FiscalHistoryEntry">
				<xsd:sequence>
					<xsd:element maxOccurs = "1" minOccurs = "1" name = "StartDate" type = "xsd:date">
						<xsd:annotation>
							<xsd:documentation>Start date of fiscal history entry.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "EndDate" type = "xsd:date">
						<xsd:annotation>
							<xsd:documentation>End date of fiscal history entry.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "IsNonResident" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>Is non resident of fiscal history entry.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute name = "SynchronizationID" type = "xsd:string" use = "optional">
					<xsd:annotation>
						<xsd:documentation>SynchronizationId is a unique injection/migration id</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:complexType>
			<xsd:complexType name = "Address">
				<xsd:sequence>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "Postal" type = "PostalAddress"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "Postals" type = "PostalAddresses"/>
						</xsd:sequence>
					</xsd:choice>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "PhoneNumber" type = "PhoneNumber">
								<xsd:annotation>
									<xsd:documentation>Phone numbers, including mobiles and faxes.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "PhoneNumbers" type = "PhoneNumbers"/>
						</xsd:sequence>
					</xsd:choice>
					<xsd:choice>
						<xsd:sequence>
							<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "Email" type = "Email"/>
						</xsd:sequence>
						<xsd:sequence>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "Emails" type = "Emails"/>
						</xsd:sequence>
					</xsd:choice>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "PostalAddresses">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "1" name = "Postal" type = "PostalAddress"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "PhoneNumbers">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "1" name = "PhoneNumber" type = "PhoneNumber"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "Emails">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "1" name = "Email" type = "Email"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "PostalAddress">
				<xsd:sequence>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "StartDate" type = "xsd:date">
						<xsd:annotation>
							<xsd:documentation>Start date of an address, in case address is historical (or present).</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "EndDate" type = "xsd:date">
						<xsd:annotation>
							<xsd:documentation>End date of an address, in case address is historical.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "Addressee" nillable = "true" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Addressee used in the correspondence.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "PostCode" nillable = "true" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Address postcode.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "1" name = "Town" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Address town.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "1" name = "CountryId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Code ID of the address country.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "Street" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Street name.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "StreetNr" nillable = "true" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Street number</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "appartmentNumber" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Appartment Number.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "Box" nillable = "true" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Address box.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "County" nillable = "true" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Address county.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "Area" nillable = "true" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Address area.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "Residence" nillable = "true" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Residence name.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "Type" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>The address qualifier - office, private, etc.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "Note" nillable = "true" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>The address note.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "CareOf" nillable = "true" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>The care of (line_two) field.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute name = "SynchronizationId" type = "xsd:string" use = "optional">
					<xsd:annotation>
						<xsd:documentation>SynchronizationId is a unique injection/migration id</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name = "IsSending" type = "xsd:boolean" use = "optional">
					<xsd:annotation>
						<xsd:documentation>Documents will be sent to this address.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name = "IsLegal" type = "xsd:boolean" use = "optional">
					<xsd:annotation>
						<xsd:documentation>Is the legal address.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name = "ExternalId" type = "xsd:string" use = "optional">
					<xsd:annotation>
						<xsd:documentation>ExternalId is a unique external ID
                    (within Solife,
                    generated if needed)
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name = "canBeDeleted" type = "xsd:boolean" use = "optional">
					<xsd:annotation>
						<xsd:documentation>Flag to know if the address can be deleted
                    within Solife. This flag is setted to true if the
                    address is referenced by others objects and, therefore,
                    cannot be deleted
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:complexType>
			<xsd:element name = "PhoneNumber" type = "PhoneNumber"/>
			<xsd:complexType name = "PhoneNumber">
				<xsd:sequence>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "Type" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>The address qualifier - office, private, etc.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute name = "SynchronizationId" type = "xsd:string" use = "optional">
					<xsd:annotation>
						<xsd:documentation>SynchronizationId is a unique injection/migration id</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name = "PhoneNumber" type = "xsd:string" use = "required">
					<xsd:annotation>
						<xsd:documentation>Phone number.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute default = "PHONE" name = "PhoneNumberType" type = "PhoneNumberType" use = "optional">
					<xsd:annotation>
						<xsd:documentation>Phone number.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name = "ExternalId" type = "xsd:string" use = "optional">
					<xsd:annotation>
						<xsd:documentation>ExternalId for the address.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name = "canBeDeleted" type = "xsd:boolean" use = "optional">
					<xsd:annotation>
						<xsd:documentation>Flag to know if the address can be deleted
                    within Solife. This flag is setted to true if the
                    address is referenced by others objects and, therefore,
                    cannot be deleted
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:complexType>
			<xsd:attribute name = "PhoneNumberType" type = "PhoneNumberType"/>
			<xsd:simpleType name = "PhoneNumberType">
				<xsd:restriction base = "xsd:NMTOKEN">
					<xsd:enumeration value = "PHONE"/>
					<xsd:enumeration value = "MOBILE"/>
					<xsd:enumeration value = "FAX"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:element name = "Email" type = "Email"/>
			<xsd:complexType name = "Email">
				<xsd:sequence>
					<xsd:element name = "Email" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Email address like john.doe@example.com.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "Type" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>The address qualifier - office, private, etc.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute name = "SynchronizationId" type = "xsd:string" use = "optional">
					<xsd:annotation>
						<xsd:documentation>SynchronizationId is a unique injection/migration id</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name = "ExternalId" type = "xsd:string" use = "optional">
					<xsd:annotation>
						<xsd:documentation>ExternalId for the address.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name = "canBeDeleted" type = "xsd:boolean" use = "optional">
					<xsd:annotation>
						<xsd:documentation>Flag to know if the address can be deleted
                    within Solife. This flag is setted to true if the
                    address is referenced by others objects and, therefore,
                    cannot be deleted
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:complexType>
			<xsd:complexType name = "ExternalAccount">
				<xsd:sequence>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "AccountTypeId" nillable = "false" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Code Id of account type (ie: cash, premium, ...)</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "CurrencyId" nillable = "false" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Code ID of the currency of the account.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "BankId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Bank identifier of the account.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "BankReference" nillable = "true" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Bank reference (an external bank) of the
						account.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "AccountNumber" nillable = "true" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>account number, mandatory if the IBAN is not
						set.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "IBAN" nillable = "true" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>IBAN of the account, mandatory if the account
						number is not set.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "AccountRef" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Account reference.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "AccountHolder" nillable = "true" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>holder of the account.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "OwnerType" nillable = "true" type = "ExternalAccountOwnerType">
						<xsd:annotation>
							<xsd:documentation>External account owner type</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute name = "SynchronizationId" type = "xsd:string" use = "optional">
					<xsd:annotation>
						<xsd:documentation>SynchronizationId is a unique injection/migration id</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name = "Default" type = "xsd:boolean" use = "optional">
					<xsd:annotation>
						<xsd:documentation>This account is used by default.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name = "Active" type = "xsd:boolean">
					<xsd:annotation>
						<xsd:documentation>Account is active. (can be used)</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:complexType>
			<xsd:simpleType name = "ExternalAccountOwnerType">
				<xsd:annotation>
					<xsd:documentation>Type of external account owner (enumeration)</xsd:documentation>
				</xsd:annotation>
				<xsd:restriction base = "xsd:NMTOKEN">
					<xsd:enumeration value = "HOLDER">
						<xsd:annotation>
							<xsd:documentation>Holder owner type</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "BENEFICIARY">
						<xsd:annotation>
							<xsd:documentation>Beneficiary owner type</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "PAYEE">
						<xsd:annotation>
							<xsd:documentation>Payee owner type</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "INSTITUTION">
						<xsd:annotation>
							<xsd:documentation>Institution owner type</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:complexType name = "IdentityInformation">
				<xsd:sequence>
					<xsd:element minOccurs = "0" name = "Number" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Identity document number.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "IssueDate" type = "xsd:date">
						<xsd:annotation>
							<xsd:documentation>Identity document issue date.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "IssueTown" nillable = "true" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Town where the document has been issued.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "IssueCountry" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Code Id of the country where the document has
						been issued.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "IssueInstitution" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Code Id of the emmiting institution of the
						document ( ie: embassy, governement, ...).
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "Type" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Code Id of the document type ( ie: passport).</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "ValidityDate" type = "xsd:date">
						<xsd:annotation>
							<xsd:documentation>Validity start date of the document.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "InsuranceCard">
				<xsd:sequence>
					<xsd:element minOccurs = "0" name = "InsuranceCardId" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "InsuranceCardActivated" type = "xsd:boolean"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "AttentionPoints">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "AttentionPoint" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Attention point code id</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<!-- THIRD PARTY SHORT DESCRIPTION -->
			<xsd:complexType abstract = "true" name = "ThirdPartyShortDesc">
				<xsd:sequence>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "externalId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Solife generated ThirdParty ID. Does not exist for ThirdParty objects that have not yet been persisted.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "synchronizationID" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Unique external identifier used to represent the third party outside of Solife.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "1" name = "name" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>ThirdParty name (PhysicalPerson family name).</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "1" name = "label" nillable = "true" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>ThirdParty label. Concept mainly used for prospects.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "languageCodeId" nillable = "true" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Language code ID.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "1" name = "legalAddress" type = "add:PostalAddressShortDesc">
						<xsd:annotation>
							<xsd:documentation>                        legal address .
                    
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<!-- PHYSICAL PERSON SHORT DESCRIPTION -->
			<xsd:complexType name = "PhysicalPersonShortDesc">
				<xsd:complexContent>
					<xsd:extension base = "ThirdPartyShortDesc">
						<xsd:sequence>
							<xsd:element maxOccurs = "1" minOccurs = "1" name = "firstName" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Person first name.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "1" name = "birthDate" type = "xsd:date">
								<xsd:annotation>
									<xsd:documentation>Person date of birth.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "1" name = "gender" type = "tpc:Gender"/>
							<xsd:element maxOccurs = "1" minOccurs = "1" name = "isDeceased" type = "xsd:boolean">
								<xsd:annotation>
									<xsd:documentation>True when the person is Deceased. Sourced from ThirdParty.isEnd.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "deceasedDate" nillable = "true" type = "xsd:date">
								<xsd:annotation>
									<xsd:documentation>Populated when isDeceased is true. Sourced from ThirdParty.end_date.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<!-- LEGAL ENTITY SHORT DESCRIPTION -->
			<xsd:complexType name = "LegalEntityShortDesc">
				<xsd:annotation>
					<xsd:documentation>Legal entity minimally consists of a name and language code which are defined in ThirdPartyShortDesc.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexContent>
					<xsd:extension base = "ThirdPartyShortDesc">
						<xsd:sequence>
							<xsd:element maxOccurs = "1" minOccurs = "1" name = "legalForm" nillable = "true" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Legal Form code ID.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element maxOccurs = "1" minOccurs = "1" name = "tradeRegister" nillable = "true" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Identity document type code (Abstract code).</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:complexType name = "ThirdPartyRefList">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" name = "thirdpartyRef" type = "ThirdPartyRef"/>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:schema>
		<xsd:schema elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/core/model/role/policy" xmlns = "http://www.bsb.com/is/xml/core/model/role/policy" xmlns:amt = "http://www.bsb.com/is/xml/core/model/util/amount" xmlns:field = "http://www.bsb.com/is/xml/integration/model/customfields" xmlns:thp = "http://www.bsb.com/is/xml/integration/model/thirdparty" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:import namespace = "http://www.bsb.com/is/xml/integration/model/thirdparty"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/integration/model/customfields"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/util/amount"/>
			<xsd:element name = "PolicyRoleList" type = "PolicyRoleList"/>
			<xsd:complexType name = "PolicyRoleList">
				<xsd:annotation>
					<xsd:documentation>A list of policy roles</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "Role" type = "PolicyRole"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "PolicyRole" type = "PolicyRole"/>
			<xsd:complexType abstract = "true" name = "PolicyRole">
				<xsd:annotation>
					<xsd:documentation>A single policy role (ex LifeAssured) for a single
				third party. If the same role is played multiple times, elements of
				this type must be duplicated.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element maxOccurs = "1" minOccurs = "1" name = "roleType" type = "PolicyRoleType">
						<xsd:annotation>
							<xsd:documentation>Type of role: broker, life assured etc</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "1" ref = "thp:ThirdParty">
						<xsd:annotation>
							<xsd:documentation>Third party playing the role</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute name = "roleInternalId" type = "xsd:string">
					<xsd:annotation>
						<xsd:documentation>Solife externalId of the Role.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name = "roleSynchronisationId" type = "xsd:string">
					<xsd:annotation>
						<xsd:documentation>External synchronisation ID of the role (external
					repository)
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:complexType>
			<xsd:simpleType name = "PolicyRoleType">
				<xsd:annotation>
					<xsd:documentation>Type of role (enumeration)</xsd:documentation>
				</xsd:annotation>
				<xsd:restriction base = "xsd:NMTOKEN">
					<xsd:enumeration value = "BROKER">
						<xsd:annotation>
							<xsd:documentation>Broker</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "HOLDER">
						<xsd:annotation>
							<xsd:documentation>Policy Holder</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "LIFE_ASSURED">
						<xsd:annotation>
							<xsd:documentation>Life assured</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "BENEFICIARY">
						<xsd:annotation>
							<xsd:documentation>Beneficiary</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "CESSIONH">
						<xsd:annotation>
							<xsd:documentation>Cession holder</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "PAYER">
						<xsd:annotation>
							<xsd:documentation>Payer role, receives the bills</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "PROXY">
						<xsd:annotation>
							<xsd:documentation>Proxy.</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "BENEFICIAL_OWNER">
						<xsd:annotation>
							<xsd:documentation>Beneficial Owner, the third party responsible for the premium payment on the contract.</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:element name = "DistributionPartnerList" type = "DistributionPartnerList"/>
			<xsd:complexType name = "DistributionPartnerList">
				<xsd:annotation>
					<xsd:documentation>List of distribution partners (brokers most of the
				time)
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "DistributionPartner" type = "DistributionPartner"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "DistributionPartner" type = "DistributionPartner"/>
			<xsd:complexType abstract = "true" name = "DistributionPartner">
				<xsd:annotation>
					<xsd:documentation>A distribution partner, a broker most of the time</xsd:documentation>
				</xsd:annotation>
				<xsd:complexContent>
					<xsd:extension base = "PolicyRole">
						<xsd:sequence>
							<xsd:element name = "language" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Main language. ExtId of the Locale (EN, FR...)</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "status" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Status (in force, etc) ExtId of the IntStatus
								abstract code: FORCE, PEND...
									</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "Communication" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation/>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "Blocked" type = "xsd:boolean">
								<xsd:annotation>
									<xsd:documentation>true iff the partneris blocked</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "Mnemonic" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>CODA mnemonic</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "name" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Unused for now.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "isBank" type = "xsd:boolean">
								<xsd:annotation>
									<xsd:documentation>True if the partner is a bank</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
						<xsd:attribute name = "IdNumber" type = "xsd:string">
							<xsd:annotation>
								<xsd:documentation>Distribution parter number, often a broker
							number like "B/400000"
								</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:element name = "BrokerList" type = "BrokerList"/>
			<xsd:complexType name = "BrokerList">
				<xsd:annotation>
					<xsd:documentation>List of brokers</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "Broker" type = "Broker"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "Broker" type = "Broker"/>
			<xsd:complexType name = "Broker">
				<xsd:annotation>
					<xsd:documentation>a Broker (extending distribution partner)</xsd:documentation>
				</xsd:annotation>
				<xsd:complexContent>
					<xsd:extension base = "DistributionPartner">
						<xsd:sequence>
							<xsd:element name = "customFields" type = "field:CustomFieldList">
								<xsd:annotation>
									<xsd:documentation>Broker custom fields</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "visible" type = "xsd:boolean">
								<xsd:annotation>
									<xsd:documentation>Is the broker visible</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<!--
		<xsd:element name="InvestmentManager" type="InvestmentManager" />
		<xsd:complexType name="InvestmentManager" />
	-->
			<xsd:element name = "HolderList" type = "HolderList"/>
			<xsd:complexType name = "HolderList">
				<xsd:annotation>
					<xsd:documentation>List of holders</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "Holder" type = "Holder"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "Holder" type = "Holder"/>
			<xsd:complexType name = "Holder">
				<xsd:annotation>
					<xsd:documentation>The policy holder</xsd:documentation>
				</xsd:annotation>
				<xsd:complexContent>
					<xsd:extension base = "PolicyRole">
						<xsd:sequence>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "customFields" nillable = "false" type = "field:CustomFieldList">
								<xsd:annotation>
									<xsd:documentation>Custom fields for the holder</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "principalHolder" type = "xsd:boolean">
								<xsd:annotation>
									<xsd:documentation>True for the main holder, false for co-holders</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "language" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Holder language. ExtId of the Locale code (EN,
								FR)
									</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "taxCountry" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>ExtId of the tax country (LU, BE...)</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "anonymous" type = "xsd:boolean">
								<xsd:annotation>
									<xsd:documentation>Is anonymous</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:element name = "LifeAssured" type = "LifeAssured"/>
			<xsd:complexType name = "LifeAssured">
				<xsd:annotation>
					<xsd:documentation>Life assured role</xsd:documentation>
				</xsd:annotation>
				<xsd:complexContent>
					<xsd:extension base = "PolicyRole">
						<xsd:sequence>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "customFields" nillable = "false" type = "field:CustomFieldList">
								<xsd:annotation>
									<xsd:documentation>Custom fields of this life assured</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "lifeAssuredIndex" type = "xsd:int">
								<xsd:annotation>
									<xsd:documentation>Index of this LA in the list of LA (1-based,
								not 0-based)
									</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:element name = "LifeAssuredList" type = "LifeAssuredList"/>
			<xsd:complexType name = "LifeAssuredList">
				<xsd:annotation>
					<xsd:documentation>List of life assured roles</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence maxOccurs = "2" minOccurs = "0">
					<xsd:element name = "lifeAssured" type = "LifeAssured"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "BeneficiaryList" type = "BeneficiaryList"/>
			<xsd:complexType name = "BeneficiaryList">
				<xsd:annotation>
					<xsd:documentation>List of beneficiaries</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "Beneficiary" type = "Beneficiary"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "Beneficiary" type = "Beneficiary"/>
			<xsd:complexType name = "Beneficiary">
				<xsd:annotation>
					<xsd:documentation>A beneficiary role</xsd:documentation>
				</xsd:annotation>
				<xsd:complexContent>
					<xsd:extension base = "PolicyRole">
						<xsd:sequence>
							<xsd:element minOccurs = "0" name = "customFields" type = "field:CustomFieldList">
								<xsd:annotation>
									<xsd:documentation>Custom fields for the beneficiary role</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "irrevocable" type = "xsd:boolean">
								<xsd:annotation>
									<xsd:documentation>True for irrevocable beneficiaries</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "split" type = "xsd:decimal">
								<xsd:annotation>
									<xsd:documentation>Percentage (split) between all beneficiaries,
								in the [0-1] range. The total must be 100%, ie 1
									</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:element name = "PayerList" type = "PayerList"/>
			<xsd:complexType name = "PayerList">
				<xsd:annotation>
					<xsd:documentation>List of payer roles</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "Payer" type = "Payer"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "Payer" type = "Payer"/>
			<xsd:complexType name = "Payer">
				<xsd:annotation>
					<xsd:documentation>Payer role</xsd:documentation>
				</xsd:annotation>
				<xsd:complexContent>
					<xsd:extension base = "PolicyRole">
						<xsd:sequence>
							<xsd:element name = "paymentModeCodeId" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Payment mode. ExtId of the PaymentMode code:
								DIRECT_DEBIT ...
									</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element minOccurs = "0" name = "externalAccount" type = "thp:ExternalAccount"/>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "AuthorizationCode" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Direct Debit Authorization code.
                                Required only when the Payment code refers to a Direct Debit and when the Bank linked to the
                                Direct Debit account of the payer refers is linked to a direct debit channel which requires
                                an Authorization Code.
									</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:element name = "BeneficialOwnerList" type = "BeneficialOwnerList"/>
			<xsd:complexType name = "BeneficialOwnerList">
				<xsd:annotation>
					<xsd:documentation>List of benficial owners</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "BeneficialOwner" type = "BeneficialOwner"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "BeneficialOwner" type = "BeneficialOwner"/>
			<xsd:complexType name = "BeneficialOwner">
				<xsd:annotation>
					<xsd:documentation>The beneficial owner</xsd:documentation>
				</xsd:annotation>
				<xsd:complexContent>
					<xsd:extension base = "PolicyRole">
						<xsd:sequence>
							<xsd:element minOccurs = "0" name = "externalAccount" type = "thp:ExternalAccount"/>
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:element name = "ProxyList" type = "ProxyList"/>
			<xsd:complexType name = "ProxyList">
				<xsd:annotation>
					<xsd:documentation>List of proxy roles</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "Proxy" type = "Proxy"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "Proxy" type = "Proxy"/>
			<xsd:complexType name = "Proxy">
				<xsd:annotation>
					<xsd:documentation>Proxy role</xsd:documentation>
				</xsd:annotation>
				<xsd:complexContent>
					<xsd:extension base = "PolicyRole">
						<xsd:sequence>
							<xsd:element name = "linkedMoralPersonRef" type = "thp:ThirdParty">
								<xsd:annotation>
									<xsd:documentation>Reference to the thirdparty acting as the
								proxy
									</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:element name = "CessionHolderList" type = "CessionHolderList"/>
			<xsd:complexType name = "CessionHolderList">
				<xsd:annotation>
					<xsd:documentation>List of cession holders</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "CessionHolder" type = "CessionHolder"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "CessionHolder" type = "CessionHolder"/>
			<xsd:complexType name = "CessionHolder">
				<xsd:annotation>
					<xsd:documentation>Cession holder role</xsd:documentation>
				</xsd:annotation>
				<xsd:complexContent>
					<xsd:extension base = "PolicyRole">
						<xsd:sequence>
							<xsd:element name = "isBank" type = "xsd:boolean">
								<xsd:annotation>
									<xsd:documentation>True if the holder is a bank. Ignored for now.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "cessionCompanyId" nillable = "true" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>External Id of the company (TP). Ignored for
								now.
									</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "collateralAmount" type = "amt:Amount">
								<xsd:annotation>
									<xsd:documentation>Collateral amount (French: nantissement)</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "collateralEndDate" type = "xsd:date">
								<xsd:annotation>
									<xsd:documentation>End date of collateral.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "collateralType" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Free code</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "collateralReference" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Free text</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "collateralPledgeDate" type = "xsd:date">
								<xsd:annotation>
									<xsd:documentation>Pledge date of collateral.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<!-- Input elements -->
			<xsd:element name = "PolicyRoleInputList" type = "PolicyRoleInputList"/>
			<xsd:complexType name = "PolicyRoleInputList">
				<xsd:annotation>
					<xsd:documentation>List of policy roles, short version for input</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "Role" type = "PolicyRoleInput"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "PolicyRoleInput" type = "PolicyRoleInput"/>
			<xsd:complexType name = "PolicyRoleInput">
				<xsd:annotation>
					<xsd:documentation>A single policy role input (ex LifeAssured) for a
				single third party. If the same role is played multiple
				times,
				elements of this type must be duplicated.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element maxOccurs = "1" minOccurs = "1" name = "roleType" type = "PolicyRoleType">
						<xsd:annotation>
							<xsd:documentation>Type of role: broker, life assured etc</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "thirdPartyRef" type = "thp:ThirdPartyRef">
						<xsd:annotation>
							<xsd:documentation>Third party playing the role</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute name = "roleInternalId" type = "xsd:string">
					<xsd:annotation>
						<xsd:documentation>Solife externalId of the role.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name = "roleSynchronisationId" type = "xsd:string">
					<xsd:annotation>
						<xsd:documentation>External synchronisation ID (external
					repository)
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:complexType>
			<xsd:element name = "DistributionPartnerInputList" type = "DistributionPartnerInputList"/>
			<xsd:complexType name = "DistributionPartnerInputList">
				<xsd:annotation>
					<xsd:documentation>List of distribution partners (brokers most of the
				time), short version for input
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence maxOccurs = "unbounded" minOccurs = "0">
					<xsd:element name = "DistributionPartnerInput" type = "DistributionPartnerInput"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "DistributionPartnerInput" type = "DistributionPartnerInput"/>
			<xsd:complexType name = "DistributionPartnerInput">
				<xsd:annotation>
					<xsd:documentation>A distribution partner, a broker most of the time.
				Short version for input
					</xsd:documentation>
				</xsd:annotation>
				<xsd:complexContent>
					<xsd:extension base = "PolicyRoleInput">
						<xsd:attribute name = "IdNumber" type = "xsd:string">
							<xsd:annotation>
								<xsd:documentation>Distribution parter number, often a broker
							number like "B/400000"
								</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:element name = "BrokerInputList" type = "BrokerInputList"/>
			<xsd:complexType name = "BrokerInputList">
				<xsd:sequence maxOccurs = "unbounded" minOccurs = "0">
					<xsd:element name = "BrokerInput" type = "BrokerInput"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "BrokerInput" type = "BrokerInput"/>
			<xsd:complexType name = "BrokerInput">
				<xsd:annotation>
					<xsd:documentation>List of brokers, short version for input</xsd:documentation>
				</xsd:annotation>
				<xsd:complexContent>
					<xsd:extension base = "DistributionPartnerInput">
						<xsd:sequence>
							<xsd:element name = "CustomFieldInputList" type = "field:CustomFieldList">
								<xsd:annotation>
									<xsd:documentation>Broker custom fields, short version for input</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:element name = "HolderInputList" type = "HolderInputList"/>
			<xsd:complexType name = "HolderInputList">
				<xsd:annotation>
					<xsd:documentation>List of holders, short version for input</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence maxOccurs = "unbounded" minOccurs = "0">
					<xsd:element name = "HolderInput" type = "HolderInput"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "HolderInput" type = "HolderInput"/>
			<xsd:complexType name = "HolderInput">
				<xsd:annotation>
					<xsd:documentation>The policy holder, short version for input</xsd:documentation>
				</xsd:annotation>
				<xsd:complexContent>
					<xsd:extension base = "PolicyRoleInput">
						<xsd:sequence>
							<xsd:element name = "CustomFieldInputList" type = "field:CustomFieldList">
								<xsd:annotation>
									<xsd:documentation>Custom fields for the holder, short version
								for input
									</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "principalHolder" type = "xsd:boolean">
								<xsd:annotation>
									<xsd:documentation>True for the main holder, false for co-holders</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:element name = "LifeAssuredInput" type = "LifeAssuredInput"/>
			<xsd:complexType name = "LifeAssuredInput">
				<xsd:annotation>
					<xsd:documentation>Life assured role, short version for input</xsd:documentation>
				</xsd:annotation>
				<xsd:complexContent>
					<xsd:extension base = "PolicyRoleInput">
						<xsd:sequence>
							<xsd:element name = "CustomFieldInputList" type = "field:CustomFieldList">
								<xsd:annotation>
									<xsd:documentation>Custom fields of this life assured, short
								version for input
									</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "lifeAssuredIndex" type = "xsd:int">
								<xsd:annotation>
									<xsd:documentation>Index of this LA in the list of LA (1-based,
								not 0-based)
									</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:element name = "LifeAssuredInputList" type = "LifeAssuredInputList"/>
			<xsd:complexType name = "LifeAssuredInputList">
				<xsd:annotation>
					<xsd:documentation>List of life assured roles, short version for
				input
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence maxOccurs = "2" minOccurs = "0">
					<xsd:element name = "lifeAssured" type = "LifeAssuredInput"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "BeneficiaryInputList" type = "BeneficiaryInputList"/>
			<xsd:complexType name = "BeneficiaryInputList">
				<xsd:annotation>
					<xsd:documentation>List of beneficiaries, short version for input</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence maxOccurs = "unbounded" minOccurs = "0">
					<xsd:element name = "BeneficiaryInput" type = "BeneficiaryInput"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "BeneficiaryInput" type = "BeneficiaryInput"/>
			<xsd:complexType name = "BeneficiaryInput">
				<xsd:annotation>
					<xsd:documentation>A beneficiary role, short version for input</xsd:documentation>
				</xsd:annotation>
				<xsd:complexContent>
					<xsd:extension base = "PolicyRoleInput">
						<xsd:sequence>
							<xsd:element name = "customFields" type = "field:CustomFieldList">
								<xsd:annotation>
									<xsd:documentation>Custom fields for the beneficiary role, short
								version for input
									</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "split" type = "xsd:decimal">
								<xsd:annotation>
									<xsd:documentation>Percentage (split) between all beneficiaries,
								in the [0-1] range. The total must be 100%, ie 1
									</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:element name = "PayerInputList" type = "PayerInputList"/>
			<xsd:complexType name = "PayerInputList">
				<xsd:sequence maxOccurs = "unbounded" minOccurs = "0">
					<xsd:element name = "PayerInput" type = "PayerInput"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "PayerInput" type = "PayerInput"/>
			<xsd:complexType name = "PayerInput">
				<xsd:annotation>
					<xsd:documentation>List of payer roles, short version for input</xsd:documentation>
				</xsd:annotation>
				<xsd:complexContent>
					<xsd:extension base = "PolicyRoleInput">
						<xsd:sequence>
							<xsd:element name = "paymentModeCodeId" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Payment mode. ExtId of the PaymentMode code:
								DIRECT_DEBIT ...
									</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element minOccurs = "0" name = "externalAccount" type = "thp:ExternalAccount"/>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "AuthorizationCode" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Direct Debit Authorization code.
                                Required only when the Payment code refers to a Direct Debit and when the Bank linked to the
                                Direct Debit account of the payer refers is linked to a direct debit channel which requires
                                an Authorization Code.
									</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:element name = "ProxyInputList" type = "ProxyInputList"/>
			<xsd:complexType name = "ProxyInputList">
				<xsd:annotation>
					<xsd:documentation>List of proxy roles, short version for input</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence maxOccurs = "unbounded" minOccurs = "0">
					<xsd:element name = "ProxyInput" type = "ProxyInput"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "ProxyInput" type = "ProxyInput"/>
			<xsd:complexType name = "ProxyInput">
				<xsd:annotation>
					<xsd:documentation>Proxy role, short version for input</xsd:documentation>
				</xsd:annotation>
				<xsd:complexContent>
					<xsd:extension base = "PolicyRoleInput">
						<xsd:sequence>
							<xsd:element name = "linkedMoralPersonRef" type = "thp:ThirdPartyRef">
								<xsd:annotation>
									<xsd:documentation>Reference to the thirdparty acting as the
								proxy
									</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:element name = "CessionHolderInputList" type = "CessionHolderInputList"/>
			<xsd:complexType name = "CessionHolderInputList">
				<xsd:annotation>
					<xsd:documentation>List of cession holders, short version for input</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence maxOccurs = "unbounded" minOccurs = "0">
					<xsd:element name = "CessionHolderInput" type = "CessionHolderInput"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "CessionHolderInput" type = "CessionHolderInput"/>
			<xsd:complexType name = "CessionHolderInput">
				<xsd:annotation>
					<xsd:documentation>Cession holder role, short version for input</xsd:documentation>
				</xsd:annotation>
				<xsd:complexContent>
					<xsd:extension base = "PolicyRoleInput">
						<xsd:sequence>
							<xsd:element name = "isBank" type = "xsd:boolean">
								<xsd:annotation>
									<xsd:documentation>True if the holder is a bank. Ignored for now.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "cessionCompanyId" nillable = "true" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>External Id of the company (TP). Ignored for
								now.
									</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "collateralAmount" type = "amt:Amount">
								<xsd:annotation>
									<xsd:documentation>Collateral amount (French: nantissement)</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "collateralEndDate" type = "xsd:date">
								<xsd:annotation>
									<xsd:documentation>End date of collateral.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "collateralType" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Free code</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "collateralReference" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Free text</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "collateralPledgeDate" type = "xsd:date">
								<xsd:annotation>
									<xsd:documentation>Pledge date of collateral.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<!-- 
	Input modification elements 
	These elements are used in the requests concerning modifications relative to a previous state
	-->
			<xsd:element name = "PolicyRoleModificationInputList" type = "PolicyRoleModificationInputList"/>
			<xsd:complexType name = "PolicyRoleModificationInputList">
				<xsd:annotation>
					<xsd:documentation>List of policy roles, short version for input</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "PolicyRoleModification" type = "PolicyRoleModificationInput"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "PolicyRoleModificationInput" type = "PolicyRoleModificationInput"/>
			<xsd:complexType name = "PolicyRoleModificationInput">
				<xsd:annotation>
					<xsd:documentation>A single policy role input (ex LifeAssured) for a
				single third party. If the same role is played multiple
				times,
				elements of this type must be duplicated.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element minOccurs = "0" name = "roleType" type = "PolicyRoleType">
						<xsd:annotation>
							<xsd:documentation>Type of role: broker, life assured etc</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "1" name = "thirdPartyRef" type = "thp:ThirdPartyRef">
						<xsd:annotation>
							<xsd:documentation>Third party playing the role</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute name = "roleInternalId" type = "xsd:string">
					<xsd:annotation>
						<xsd:documentation>Solife externalId of the role.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name = "roleSynchronisationId" type = "xsd:string">
					<xsd:annotation>
						<xsd:documentation>External synchronisation ID (external
					repository)
						</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:complexType>
			<xsd:element name = "DistributionPartnerModificationInputList" type = "DistributionPartnerModificationInputList"/>
			<xsd:complexType name = "DistributionPartnerModificationInputList">
				<xsd:annotation>
					<xsd:documentation>List of distribution partners (brokers most of the
				time), short version for input
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence maxOccurs = "unbounded" minOccurs = "0">
					<xsd:element name = "DistributionPartnerModificationInput" type = "DistributionPartnerModificationInput"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "DistributionPartnerModificationInput" type = "DistributionPartnerModificationInput"/>
			<xsd:complexType name = "DistributionPartnerModificationInput">
				<xsd:annotation>
					<xsd:documentation>A distribution partner, a broker most of the time.
				Short version for input
					</xsd:documentation>
				</xsd:annotation>
				<xsd:complexContent>
					<xsd:extension base = "PolicyRoleModificationInput">
						<xsd:attribute name = "IdNumber" type = "xsd:string">
							<xsd:annotation>
								<xsd:documentation>Distribution parter number, often a broker
							number like "B/400000"
								</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:element name = "BrokerModificationInputList" type = "BrokerModificationInputList"/>
			<xsd:complexType name = "BrokerModificationInputList">
				<xsd:sequence maxOccurs = "unbounded" minOccurs = "0">
					<xsd:element name = "BrokerModificationInput" type = "BrokerModificationInput"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "BrokerModificationInput" type = "BrokerModificationInput"/>
			<xsd:complexType name = "BrokerModificationInput">
				<xsd:annotation>
					<xsd:documentation>List of brokers, short version for input</xsd:documentation>
				</xsd:annotation>
				<xsd:complexContent>
					<xsd:extension base = "DistributionPartnerInput">
						<xsd:sequence>
							<xsd:element name = "CustomFieldInputList" type = "field:CustomFieldInputList">
								<xsd:annotation>
									<xsd:documentation>Broker custom fields, short version for input</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:element name = "HolderModificationInputList" type = "HolderModificationInputList"/>
			<xsd:complexType name = "HolderModificationInputList">
				<xsd:annotation>
					<xsd:documentation>List of holders, short version for input</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence maxOccurs = "unbounded" minOccurs = "0">
					<xsd:element name = "HolderModificationInput" type = "HolderModificationInput"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "HolderModificationInput" type = "HolderModificationInput"/>
			<xsd:complexType name = "HolderModificationInput">
				<xsd:annotation>
					<xsd:documentation>The policy holder, short version for input</xsd:documentation>
				</xsd:annotation>
				<xsd:complexContent>
					<xsd:extension base = "PolicyRoleModificationInput">
						<xsd:sequence>
							<xsd:element name = "CustomFieldInputList" type = "field:CustomFieldInputList">
								<xsd:annotation>
									<xsd:documentation>Custom fields for the holder, short version
								for input
									</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element default = "false" minOccurs = "0" name = "principalHolder" type = "xsd:boolean">
								<xsd:annotation>
									<xsd:documentation>True for the main holder, false for co-holders</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:element name = "LifeAssuredModificationInputList" type = "LifeAssuredModificationInputList"/>
			<xsd:complexType name = "LifeAssuredModificationInputList">
				<xsd:annotation>
					<xsd:documentation>List of life assured roles, short version for
				input
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence maxOccurs = "2" minOccurs = "0">
					<xsd:element name = "LifeAssuredModificationInput" type = "LifeAssuredModificationInput"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "LifeAssuredModificationInput" type = "LifeAssuredModificationInput"/>
			<xsd:complexType name = "LifeAssuredModificationInput">
				<xsd:annotation>
					<xsd:documentation>Life assured role, short version for input</xsd:documentation>
				</xsd:annotation>
				<xsd:complexContent>
					<xsd:extension base = "PolicyRoleModificationInput">
						<xsd:sequence>
							<xsd:element name = "CustomFieldInputList" type = "field:CustomFieldInputList">
								<xsd:annotation>
									<xsd:documentation>Custom fields of this life assured, short
								version for input
									</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element minOccurs = "1" name = "lifeAssuredIndex" type = "xsd:int">
								<xsd:annotation>
									<xsd:documentation>Index of this LA in the list of LA (1-based,
								not 0-based)
									</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:element name = "BeneficiaryModificationInputList" type = "BeneficiaryModificationInputList"/>
			<xsd:complexType name = "BeneficiaryModificationInputList">
				<xsd:annotation>
					<xsd:documentation>List of beneficiaries, short version for input</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence maxOccurs = "unbounded" minOccurs = "0">
					<xsd:element name = "BeneficiaryModificationInput" type = "BeneficiaryModificationInput"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "BeneficiaryModificationInput" type = "BeneficiaryModificationInput"/>
			<xsd:complexType name = "BeneficiaryModificationInput">
				<xsd:annotation>
					<xsd:documentation>A beneficiary role, short version for input</xsd:documentation>
				</xsd:annotation>
				<xsd:complexContent>
					<xsd:extension base = "PolicyRoleModificationInput">
						<xsd:sequence>
							<xsd:element name = "CustomFieldsInputList" type = "field:CustomFieldInputList">
								<xsd:annotation>
									<xsd:documentation>Custom fields for the beneficiary role, short
								version for input
									</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element minOccurs = "0" name = "split" type = "xsd:decimal">
								<xsd:annotation>
									<xsd:documentation>Percentage (split) between all beneficiaries,
								in the [0-1] range. The total must be 100%, ie 1
									</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:element name = "PayerModificationInputList" type = "PayerModificationInputList"/>
			<xsd:complexType name = "PayerModificationInputList">
				<xsd:sequence maxOccurs = "unbounded" minOccurs = "0">
					<xsd:element name = "PayerModificationInput" type = "PayerModificationInput"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "PayerModificationInput" type = "PayerModificationInput"/>
			<xsd:complexType name = "PayerModificationInput">
				<xsd:annotation>
					<xsd:documentation>List of payer roles, short version for input</xsd:documentation>
				</xsd:annotation>
				<xsd:complexContent>
					<xsd:extension base = "PolicyRoleModificationInput">
						<xsd:sequence>
							<xsd:element minOccurs = "0" name = "paymentModeCodeId" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Payment mode. ExtId of the PaymentMode code:
								DIRECT_DEBIT ...
									</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element minOccurs = "0" name = "externalAccount" type = "thp:ExternalAccount"/>
							<xsd:element maxOccurs = "1" minOccurs = "0" name = "AuthorizationCode" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Direct Debit Authorization code.
                                Required only when the Payment code refers to a Direct Debit and when the Bank linked to the
                                Direct Debit account of the payer refers is linked to a direct debit channel which requires
                                an Authorization Code.
									</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:element name = "ProxyModificationInputList" type = "ProxyModificationInputList"/>
			<xsd:complexType name = "ProxyModificationInputList">
				<xsd:annotation>
					<xsd:documentation>List of proxy roles, short version for input</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence maxOccurs = "unbounded" minOccurs = "0">
					<xsd:element name = "ProxyModificationInput" type = "ProxyModificationInput"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "ProxyModificationInput" type = "ProxyModificationInput"/>
			<xsd:complexType name = "ProxyModificationInput">
				<xsd:annotation>
					<xsd:documentation>Proxy role, short version for input</xsd:documentation>
				</xsd:annotation>
				<xsd:complexContent>
					<xsd:extension base = "PolicyRoleModificationInput">
						<xsd:sequence>
							<xsd:element name = "linkedMoralPersonRef" type = "thp:ThirdPartyRef">
								<xsd:annotation>
									<xsd:documentation>Reference to the thirdparty acting as the
								proxy
									</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:element name = "CessionHolderModificationInputList" type = "CessionHolderModificationInputList"/>
			<xsd:complexType name = "CessionHolderModificationInputList">
				<xsd:annotation>
					<xsd:documentation>List of cession holders, short version for input</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence maxOccurs = "unbounded" minOccurs = "0">
					<xsd:element name = "CessionHolderModificationInput" type = "CessionHolderModificationInput"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "CessionHolderModificationInput" type = "CessionHolderModificationInput"/>
			<xsd:complexType name = "CessionHolderModificationInput">
				<xsd:annotation>
					<xsd:documentation>Cession holder role, short version for input</xsd:documentation>
				</xsd:annotation>
				<xsd:complexContent>
					<xsd:extension base = "PolicyRoleModificationInput">
						<xsd:sequence>
							<xsd:element name = "isBank" type = "xsd:boolean">
								<xsd:annotation>
									<xsd:documentation>True if the holder is a bank. Ignored for now.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "cessionCompanyId" nillable = "true" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>External Id of the company (TP). Ignored for
								now.
									</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "collateralAmount" type = "amt:Amount">
								<xsd:annotation>
									<xsd:documentation>Collateral amount (French: nantissement)</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "collateralEndDate" type = "xsd:date">
								<xsd:annotation>
									<xsd:documentation>End date of collateral.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "collateralType" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Free code</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "collateralReference" type = "xsd:string">
								<xsd:annotation>
									<xsd:documentation>Free text</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name = "collateralPledgeDate" type = "xsd:date">
								<xsd:annotation>
									<xsd:documentation>Pledge date of collateral.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
		</xsd:schema>
		<xsd:schema attributeFormDefault = "unqualified" elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/core/model/product" xmlns = "http://www.bsb.com/is/xml/core/model/product" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:complexType name = "ProductShortDescription">
				<xsd:annotation>
					<xsd:documentation>Short description of a product.
				Identifier: product
				code and product version
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name = "productCode" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Product code, ex MIX-O</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "productName" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Product name (AOM)</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "productVersion" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Version of the product (often the most recent)</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "productFamily" nillable = "true" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Product Family)</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "allowsIndexation" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>Specify if the product allowd indexation or not</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "productDescription" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Product description (AOM)</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "businessLineCodeId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>ExtId of the business line: TRAD_LIFE,
						UNIT_LINKED, VAR_ANN or UNIV_LIFE
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "productTypeCodeId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>ExtId of the ProductType hardcode: PCP, BMF,
						VIP...
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "productStatusCodeId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Corresponds to a ProductStatus AbstractCode.
						Example values: PEND, INFORCE, CLOSING
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "allowsPolicyLoan" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>Specify if the product allows policy loans or not</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "allowsSimulation" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>True if the product allows simulations</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "ProductRef" type = "ProductRef"/>
			<xsd:complexType name = "ProductRef">
				<xsd:annotation>
					<xsd:documentation>Unique reference to an existing product</xsd:documentation>
				</xsd:annotation>
				<xsd:attribute name = "productCode" type = "xsd:string">
					<xsd:annotation>
						<xsd:documentation>Product code, ex MIX-O</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name = "productVersion" type = "xsd:string">
					<xsd:annotation>
						<xsd:documentation>Version of the product (often the most recent)</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:complexType>
			<xsd:element name = "productFamily" type = "productFamily"/>
			<xsd:simpleType name = "productFamily">
				<xsd:restriction base = "xsd:NMTOKEN">
					<xsd:enumeration value = "INDIVIDUAL"/>
					<xsd:enumeration value = "GROUP"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:schema>
		<xsd:schema elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/core/model/clause" xmlns = "http://www.bsb.com/is/xml/core/model/clause" xmlns:wdg = "http://www.bsb.com/is/xml/core/model/util/wording" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/util/wording"/>
			<xsd:complexType name = "Clause">
				<xsd:annotation>
					<xsd:documentation>A policy clause</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name = "clauseReference" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Clause reference (considered as an ID)</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "1" name = "clauseText" nillable = "true" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Text for the clause</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "divisionCodes" nillable = "false" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Division Codes</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "isMandatory" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>Is the clause mandatory?</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "beginDate" nillable = "false" type = "xsd:date">
						<xsd:annotation>
							<xsd:documentation>Begin date for the clause</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "endDate" nillable = "false" type = "xsd:date">
						<xsd:annotation>
							<xsd:documentation>End date for the clause</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "clauseTypeCodeId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Type of clause. This is the extId of the
						ClauseType hardcode: AUTO_BEN, MANUAL_GEN...
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "wordingText" type = "wdg:WordingText">
						<xsd:annotation>
							<xsd:documentation>Clause texts linked to the clause (i18n'd)</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "riskTypeCodeId" nillable = "false" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Type of risk. This is the extId of the RiskType
						hardCode: LIFE, TERM...
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "needsBeneficiary" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>True iff this clause requires beneficiaries
						(invalid without at least one)
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "multipleBeneficiaries" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>True iff this clause accepts multiple
						beneficiaries.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "clauseApplication" nillable = "false" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Denotes which life assured, if any, this clause applies to</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "wordingDesc" type = "wdg:WordingText">
						<xsd:annotation>
							<xsd:documentation>Description of the Clause</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "version" type = "xsd:int">
						<xsd:annotation>
							<xsd:documentation>Version of the Clause</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "confidentialityLevel" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Version of the Clause</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "ClauseInput">
				<xsd:annotation>
					<xsd:documentation>A policy clause, short version for input</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name = "clauseReference" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Clause reference (considered as an ID)</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "clauseTypeCodeId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Type of clause. This is the extId of the
						ClauseType hardcode: AUTO_BEN, MANUAL_GEN...
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "wordingText" type = "wdg:WordingText">
						<xsd:annotation>
							<xsd:documentation>Clause texts linked to the clause (i18n'd)</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "clauseTypeFamily" type = "clauseTypeFamily"/>
			<xsd:simpleType name = "clauseTypeFamily">
				<xsd:annotation>
					<xsd:documentation>Clause type family. Each one represents a group of clause types</xsd:documentation>
				</xsd:annotation>
				<xsd:restriction base = "xsd:NMTOKEN">
					<xsd:enumeration value = "BENEFICIARY_CLAUSES"/>
					<xsd:enumeration value = "CESSION_CLAUSES"/>
					<xsd:enumeration value = "GENERAL_CLAUSES"/>
					<xsd:enumeration value = "EXCLUSION_CLAUSES"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:element name = "clauseTypeFamilyList" type = "clauseTypeFamilyList"/>
			<xsd:complexType name = "clauseTypeFamilyList">
				<xsd:annotation>
					<xsd:documentation>List of clause type families</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element maxOccurs = "4" minOccurs = "0" name = "clauseTypeFamily" type = "clauseTypeFamily"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "ClauseList">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" name = "clause" type = "Clause"/>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:schema>
		<xsd:schema elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/traditionallife/model/clause" xmlns = "http://www.bsb.com/is/xml/traditionallife/model/clause" xmlns:cla = "http://www.bsb.com/is/xml/core/model/clause" xmlns:prd = "http://www.bsb.com/is/xml/core/model/product" xmlns:tp = "http://www.bsb.com/is/xml/integration/model/thirdparty" xmlns:wdg = "http://www.bsb.com/is/xml/core/model/util/wording" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/product"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/clause"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/integration/model/thirdparty"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/util/wording"/>
			<xsd:element name = "TradLifeClauseList" type = "TradLifeClauseList"/>
			<xsd:complexType name = "TradLifeClauseList">
				<xsd:annotation>
					<xsd:documentation>List of traditional life clauses</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "TradLifeClause" type = "TradLifeClause"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "TradLifeClause" type = "TradLifeClause"/>
			<xsd:complexType name = "TradLifeClause">
				<xsd:annotation>
					<xsd:documentation>A Traditional life clause for a product. Can be
				general (text only), beneficiary (with TP), cession or exclusion.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name = "clause" type = "cla:Clause">
						<xsd:annotation>
							<xsd:documentation>A general clause</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "productRef" type = "prd:ProductShortDescription">
						<xsd:annotation>
							<xsd:documentation>A reference to the product (only code and
						version are required). This is required to find the correct clause
						linked to the product
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "mandatory" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>True if the clause is mandatory</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "defaultClause" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>True if this clause is a default clause</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "isSelected" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>True if this clause is selected</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "riskTypeCodeId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Type of risk. This is the extId of the RiskType
						hardCode: LIFE, TERM...
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "beneficiarySplits">
						<xsd:annotation>
							<xsd:documentation>A list of splits (percentages) between the
						beneficiaries. The total must be 1 (ie 100%)
							</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence maxOccurs = "unbounded" minOccurs = "0">
								<xsd:element name = "beneficiarySplit" type = "BeneficiaryClauseSplit"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "clauseLevel" type = "xsd:int">
						<xsd:annotation>
							<xsd:documentation>Clause level, will be set to 1 if any level is defined</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "BeneficiaryClauseSplit">
				<xsd:annotation>
					<xsd:documentation>A split (percentage) among the beneficiaries of a
				clause
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name = "beneficiary" type = "tp:ThirdParty">
						<xsd:annotation>
							<xsd:documentation>The third party acting as a beneficiary</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "split" type = "xsd:decimal">
						<xsd:annotation>
							<xsd:documentation>The split(percentage). This is a decimal number
						between 0 and 1
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "isIrrevocable" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>Identify a beneficiary as irrevocable in eSolife</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "isAcceptingBeneficiary" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>True when some operations on the contract could not be done without the approval of the beneficiary.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "TradLifeClauseInputList" type = "TradLifeClauseInputList"/>
			<xsd:complexType name = "TradLifeClauseInputList">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "TradLifeClauseInput" type = "TradLifeClauseInput"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "TradLifeClauseInput" type = "TradLifeClauseInput"/>
			<xsd:complexType name = "TradLifeClauseInput">
				<xsd:annotation>
					<xsd:documentation>A Traditional life clause for a product, short
				version for input. Can be general (text only), beneficiary (with
				TP),
				cession or exclusion.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name = "clause" type = "cla:ClauseInput">
						<xsd:annotation>
							<xsd:documentation>A general clause, short version for input</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "productRef" type = "prd:ProductShortDescription">
						<xsd:annotation>
							<xsd:documentation>A reference to the product (only code and
						version are required). This is required to find the correct clause
						linked to the product
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "isSelected" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>True if this clause is selected</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "riskTypeCodeId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Type of risk. This is the extId of the RiskType
						hardCode: LIFE, TERM...
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "beneficiarySplitsInput">
						<xsd:annotation>
							<xsd:documentation>A list of splits (percentages) between the
						beneficiaries, short version for input. The total must be 1 (ie
						100%)
							</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence maxOccurs = "unbounded" minOccurs = "0">
								<xsd:element name = "BeneficiaryClauseSplitInput" type = "BeneficiaryClauseSplitInput"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "BeneficiaryClauseSplitInput">
				<xsd:annotation>
					<xsd:documentation>A split (percentage) among the beneficiaries of a
				clause, short version for input
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name = "beneficiary" type = "tp:ThirdPartyRef">
						<xsd:annotation>
							<xsd:documentation>A reference to the third party acting as a
						beneficiary
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "split" type = "xsd:decimal">
						<xsd:annotation>
							<xsd:documentation>The split(percentage). This is a decimal number
						between 0 and 1
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "isIrrevocable" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>Identify a beneficiary as irrevocable in eSolife</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "TraditionalLifeClauseModificationInputList" type = "TraditionalLifeClauseModificationInputList"/>
			<xsd:complexType name = "TraditionalLifeClauseModificationInputList">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "TradtionalLifeClauseModificationInput" type = "TradtionalLifeClauseModificationInput"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "TradtionalLifeClauseModificationInput" type = "TradtionalLifeClauseModificationInput"/>
			<xsd:complexType name = "TradtionalLifeClauseModificationInput">
				<xsd:annotation>
					<xsd:documentation>A Traditional life clause for a product, short
				version for input. Can be general (text only), beneficiary (with
				TP),
				cession or exclusion.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name = "clauseReference" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>A general clause, short version for input</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "clauseTypeCodeId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Type of clause. This is the extId of the
						ClauseType hardcode: AUTO_BEN, MANUAL_BEN...
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "riskTypeCodeId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Type of risk. This is the extId of the RiskType
						hardCode: LIFE, TERM...
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "clauseText" type = "wdg:WordingText">
						<xsd:annotation>
							<xsd:documentation>Clause texts linked to the clause (i18n'd)</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "isSelected" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>True if this clause is selected</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "beneficiarySplitModificationInputList" type = "BeneficiaryClauseModificationSplitInputList">
						<xsd:annotation>
							<xsd:documentation>A list of splits (percentages) between the
						beneficiaries, short version for input. The total must be 1 (ie
						100%)
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "BeneficiaryClauseModificationSplitInputList" type = "BeneficiaryClauseModificationSplitInputList"/>
			<xsd:complexType name = "BeneficiaryClauseModificationSplitInputList">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "BeneficiaryClauseModificationSplitInput" type = "BeneficiaryClauseModificationSplitInput">
						<xsd:annotation>
							<xsd:documentation>A reference to the third party acting as a
						beneficiary
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "BeneficiaryClauseModificationSplitInput">
				<xsd:annotation>
					<xsd:documentation>A split (percentage) among the beneficiaries of a
				clause, short version for input
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name = "beneficiary" type = "tp:ThirdPartyRef">
						<xsd:annotation>
							<xsd:documentation>A reference to the third party acting as a
						beneficiary
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "split" type = "xsd:decimal">
						<xsd:annotation>
							<xsd:documentation>The split(percentage). This is a decimal number
						between 0 and 1
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "isIrrevocable" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>Identify a beneficiary as irrevocable in eSolife</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:schema>
		<xsd:schema attributeFormDefault = "unqualified" elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/traditionallife/model/policy/detail/basecapital" xmlns = "http://www.bsb.com/is/xml/traditionallife/model/policy/detail/basecapital" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:element name = "EndorsedBaseCapitals" type = "EndorsedBaseCapitals"/>
			<xsd:complexType name = "EndorsedBaseCapitals">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" name = "baseCapitalByRisk" type = "BaseCapitalByRisk"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "BaseCapitalByRisk">
				<xsd:sequence>
					<xsd:element name = "riskType" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "baseCapitalValuesByRisk" type = "BaseCapitalValuesByRisk"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "BaseCapitalValuesByRisk">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" name = "baseCapitalValues" type = "BaseCapitalValues"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "BaseCapitalValues">
				<xsd:sequence>
					<xsd:element name = "endorsementTypeDescription" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Subscription, Last Endorsement, current,...</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "baseCapitalValue" type = "xsd:decimal"/>
					<xsd:element name = "baseCapitalValorizationDate" type = "xsd:date"/>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:schema>
		<xsd:schema elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/traditionallife/model/policy" xmlns = "http://www.bsb.com/is/xml/traditionallife/model/policy" xmlns:amt = "http://www.bsb.com/is/xml/core/model/util/amount" xmlns:cfield = "http://www.bsb.com/is/xml/integration/model/customfields" xmlns:ebc = "http://www.bsb.com/is/xml/traditionallife/model/policy/detail/basecapital" xmlns:prd = "http://www.bsb.com/is/xml/core/model/product" xmlns:role = "http://www.bsb.com/is/xml/core/model/role/policy" xmlns:tlc = "http://www.bsb.com/is/xml/traditionallife/model/clause" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:import namespace = "http://www.bsb.com/is/xml/integration/model/customfields"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/util/amount"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/role/policy"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/product"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/traditionallife/model/clause"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/traditionallife/model/policy/detail/basecapital"/>
			<xsd:element name = "TradLifePolicyRef" type = "TradLifePolicyRef"/>
			<xsd:complexType name = "TradLifePolicyRef">
				<xsd:sequence>
					<xsd:element name = "policyNumber" type = "xsd:string"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "TradLifePolicy">
				<xsd:annotation>
					<xsd:documentation>Short version of a Traditional life policy.
				Returned by the TradLife policy searcher WS.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name = "policyNumber" type = "xsd:string"/>
					<xsd:element name = "pcNumber" type = "xsd:string"/>
					<xsd:element name = "statusCodeId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Corresponds to a IntStatus AbstractCode. Example values: FORCE, TERM</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "product" type = "prd:ProductShortDescription"/>
					<xsd:element name = "roleList" type = "role:PolicyRoleList">
						<xsd:annotation>
							<xsd:documentation>List of all roles (including holder, broker etc)</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "issueDate" type = "xsd:date"/>
					<xsd:element name = "effectiveDate" type = "xsd:date"/>
					<xsd:element name = "termDate" type = "xsd:date">
						<xsd:annotation>
							<xsd:documentation>Policy term date (fixed).</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "endDate" type = "xsd:date">
						<xsd:annotation>
							<xsd:documentation>Effective Policy term date (when really ended),
						before termDate.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "customFieldList" type = "cfield:CustomFieldList"/>
					<xsd:element name = "deathCapital" type = "amt:Amount"/>
					<xsd:element name = "lifeCapital" type = "amt:Amount"/>
					<xsd:element name = "theoricRedemptionReserve" type = "amt:Amount"/>
					<xsd:element name = "clauseList" type = "tlc:TradLifeClauseList"/>
					<xsd:element name = "endorsedBaseCapitals" type = "ebc:EndorsedBaseCapitals">
						<xsd:annotation>
							<xsd:documentation>endorsed base capital values</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:schema>
		<xsd:schema elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/core/model/bill" xmlns = "http://www.bsb.com/is/xml/core/model/bill" xmlns:amt = "http://www.bsb.com/is/xml/core/model/util/amount" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/util/amount"/>
			<xsd:element name = "BillShortDescription" type = "BillShortDescription"/>
			<xsd:complexType name = "BillShortDescription">
				<xsd:sequence>
					<xsd:element name = "billId" type = "xsd:string"/>
					<xsd:element name = "policyNumber" type = "xsd:string"/>
					<xsd:element name = "pcNumber" type = "xsd:string"/>
					<xsd:element name = "billTypeCodeId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Corresponds to BillType HardCode. Example values: PREMIUM, TRANSFERT</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "startDate" type = "xsd:date"/>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "endDate" nillable = "false" type = "xsd:date"/>
					<xsd:element name = "billStatusCodeId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Corresponds to a BillStatus HardCode. Example values: NEW, SCHEDULED</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "currencyCodeId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Corresponds to a ISO currency code. Example values: USD, EUR</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "billAmount" type = "amt:Amount"/>
					<xsd:element name = "billContribution" type = "amt:Amount"/>
					<xsd:element name = "endorsementNumber" type = "xsd:string"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "BillShortDescriptionList" type = "BillShortDescriptionList"/>
			<xsd:complexType name = "BillShortDescriptionList">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" ref = "BillShortDescription"/>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:schema>
		<xsd:schema attributeFormDefault = "unqualified" elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/core/model/indexation" xmlns = "http://www.bsb.com/is/xml/core/model/indexation" xmlns:wdg = "http://www.bsb.com/is/xml/core/model/util/wording" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/util/wording"/>
			<xsd:complexType name = "Indexation">
				<xsd:sequence>
					<xsd:element minOccurs = "0" name = "indexationTypeCodeId" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "indexationBaseCodeId" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "indexationConfig" type = "wdg:WordingText"/>
					<xsd:element minOccurs = "0" name = "indexationConfigName" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "indexationDate" type = "xsd:date"/>
					<xsd:element minOccurs = "0" name = "indexationValue" type = "xsd:decimal"/>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:schema>
		<xsd:schema attributeFormDefault = "unqualified" elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/core/model/policy/policyloan" xmlns = "http://www.bsb.com/is/xml/core/model/policy/policyloan" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:element name = "PolicyLoan" type = "PolicyLoan"/>
			<xsd:complexType name = "PolicyLoan">
				<xsd:sequence>
					<xsd:element name = "loanId" type = "xsd:string"/>
					<xsd:element name = "startDate" type = "xsd:date"/>
					<xsd:element name = "endDate" type = "xsd:date"/>
					<xsd:element name = "grantedAmount" type = "xsd:decimal"/>
					<xsd:element name = "remainingCapital" type = "xsd:decimal"/>
					<xsd:element name = "remainingInterests" type = "xsd:decimal"/>
					<xsd:element name = "currencyCodeId" type = "xsd:string"/>
					<xsd:element name = "statusCodeId" type = "xsd:string"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "PolicyLoanList" type = "PolicyLoanList"/>
			<xsd:complexType name = "PolicyLoanList">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" ref = "PolicyLoan"/>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:schema>
		<xsd:schema elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/core/model/document" xmlns = "http://www.bsb.com/is/xml/core/model/document" xmlns:wdg = "http://www.bsb.com/is/xml/core/model/util/wording" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/util/wording"/>
			<xsd:element name = "DocumentList" type = "DocumentList"/>
			<xsd:complexType name = "DocumentList">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "Document" type = "Document"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "Document" type = "Document"/>
			<xsd:complexType name = "Document">
				<xsd:annotation>
					<xsd:documentation>A document specimen. This should be the original
				specimen
				among the list of specimens associated to a Solife Document
				(a copy in some cases).
				It represents a PDF or XLS file.
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name = "specimenId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>DocId of the document specimen. This is the
						identifier of the specimen.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "extId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>External ID of the document specimen</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "documentType" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Technical note: Type of the document (administrative, medical ...). 
						Can't be used as an identifier.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "docTypeExtId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>External ID of the type of document (Administrative document extId)</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "docTypeDescription" type = "wdg:WordingText">
						<xsd:annotation>
							<xsd:documentation>Description of the document specimen.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "specimenURL" nillable = "true" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>URL of the document specimen. Can be null in the
						case of document generation (which is asynchronous). Only
						documents
						linked to a generated (PDF / xls) file are available at a
						URL.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "hasURL" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>True iff the doc specimen is (or will be)
						available through a URL (ie linked to a
						physical (PDF, xls,... )
						file. In case of async doc generation, hasURL is
						true but
						the
						specimenURL can be empty and filled later on.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "creationDate" type = "xsd:date">
						<xsd:annotation>
							<xsd:documentation>Date the document was created.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "transmissionDate" nillable = "false" type = "xsd:date">
						<xsd:annotation>
							<xsd:documentation>Date the document was transmitted.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "abandonedDate" nillable = "false" type = "xsd:date">
						<xsd:annotation>
							<xsd:documentation>Date the document was abandoned.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "specimenTypeCodeId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Date the original document was recieved.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "dueDate" nillable = "false" type = "xsd:date">
						<xsd:annotation>
							<xsd:documentation>Date the document is due.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "endValidityDateWithOffSet" nillable = "false" type = "xsd:date">
						<xsd:annotation>
							<xsd:documentation>End Validity Date with offset applied</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "DocumentTypeList" type = "DocumentTypeList"/>
			<xsd:complexType name = "DocumentTypeList">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "documentType" nillable = "true" type = "DocumentType"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "DocumentType" type = "DocumentType"/>
			<xsd:complexType name = "DocumentType">
				<xsd:sequence>
					<xsd:element minOccurs = "0" name = "externalId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>External ID of the type of document (Administrative document extId)</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "description" type = "wdg:WordingText">
						<xsd:annotation>
							<xsd:documentation>Description of the type of document</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:schema>
		<xsd:schema attributeFormDefault = "unqualified" elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/core/model/coverage/constants" xmlns = "http://www.bsb.com/is/xml/core/model/coverage/constants" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:simpleType name = "CoverageFamily">
				<xsd:restriction base = "xsd:string">
					<xsd:enumeration value = "RISK"/>
					<xsd:enumeration value = "INVESTMENT"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:schema>
		<xsd:schema elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/core/model/coverageclaimable" xmlns = "http://www.bsb.com/is/xml/core/model/coverageclaimable" xmlns:amt = "http://www.bsb.com/is/xml/core/model/util/amount" xmlns:cla = "http://www.bsb.com/is/xml/core/model/clause" xmlns:cvc = "http://www.bsb.com/is/xml/core/model/coverage/constants" xmlns:doc = "http://www.bsb.com/is/xml/core/model/document" xmlns:wdg = "http://www.bsb.com/is/xml/core/model/util/wording" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/clause"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/document"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/util/amount"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/util/wording"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/coverage/constants"/>
			<xsd:complexType name = "ClaimableCoveragesList">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "coverage" type = "ClaimableCoverageShortDesc"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "ClaimableCoverageShortDesc">
				<xsd:sequence>
					<xsd:element name = "coverageId" type = "xsd:string"/>
					<xsd:element name = "coverageDefinition" type = "CoverageDefinitionShortDesc"/>
					<xsd:element name = "policyNumber" type = "xsd:string"/>
					<xsd:element name = "startDate" type = "xsd:date"/>
					<xsd:element minOccurs = "0" name = "endDate" type = "xsd:date"/>
					<xsd:element name = "riskTypeList" type = "CoverageRiskTypeList"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "CoverageRiskTypeList">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" name = "riskType" type = "CoverageRiskType"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "CoverageRiskType">
				<xsd:sequence>
					<xsd:element name = "riskType" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>The type of risk</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "benefitType" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Type of benefit returned (Capital or Annuity)</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "CoverageDefinitionShortDesc">
				<xsd:sequence>
					<xsd:element maxOccurs = "1" minOccurs = "1" name = "identifier" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Identifier of the coverage definition.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "1" name = "wordingText" type = "wdg:WordingText">
						<xsd:annotation>
							<xsd:documentation>Localised labels for the code.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "1" name = "coverageFamily" type = "cvc:CoverageFamily">
						<xsd:annotation>
							<xsd:documentation>Coverage Family. See enumeration.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "1" name = "coverageType" nillable = "true" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Code of Coverage Type (abstract code). It might be null for investment coverages.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "ClaimableCoverage">
				<xsd:complexContent>
					<xsd:extension base = "ClaimableCoverageShortDesc">
						<xsd:sequence>
							<xsd:element minOccurs = "0" name = "exclusionClauses" type = "cla:ClauseList"/>
							<xsd:element minOccurs = "0" name = "requiredDocuments" type = "doc:DocumentList"/>
							<xsd:element minOccurs = "0" name = "waiverPercentage" type = "xsd:decimal"/>
							<xsd:element minOccurs = "0" name = "benefitAmount" type = "amt:Amount"/>
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:complexType name = "CoverageIdList">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" name = "coverageId" type = "xsd:string"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "ClaimableCoverageDetailsList">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" name = "claimableCoverage" type = "ClaimableCoverage"/>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:schema>
		<xs:schema elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/core/model/benefitfile" xmlns = "http://www.bsb.com/is/xml/core/model/benefitfile" xmlns:amt = "http://www.bsb.com/is/xml/core/model/util/amount" xmlns:thp = "http://www.bsb.com/is/xml/integration/model/thirdparty" xmlns:xs = "http://www.w3.org/2001/XMLSchema">
			<xs:import namespace = "http://www.bsb.com/is/xml/core/model/util/amount"/>
			<xs:import namespace = "http://www.bsb.com/is/xml/integration/model/thirdparty"/>
			<xs:complexType name = "BenefitFileIdList">
				<xs:sequence>
					<xs:element maxOccurs = "unbounded" name = "benefitFileId" type = "xs:string">
						<xs:annotation>
							<xs:documentation>Benefit File Id.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name = "BenefitFileList">
				<xs:sequence>
					<xs:element maxOccurs = "unbounded" minOccurs = "0" name = "benefitFile" type = "BenefitFileShortDesc">
						<xs:annotation>
							<xs:documentation>General information concerning the benefit file.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name = "BenefitFileShortDesc">
				<xs:sequence>
					<xs:element name = "identifier" type = "xs:string">
						<xs:annotation>
							<xs:documentation>Identifier of the benefit file.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name = "startDate" type = "xs:date">
						<xs:annotation>
							<xs:documentation>Creation date of the benefit file.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs = "0" name = "issuingDate" type = "xs:date">
						<xs:annotation>
							<xs:documentation/>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs = "0" name = "endDate" type = "xs:date">
						<xs:annotation>
							<xs:documentation>End date of the benefit file.
                        Value only used in case the benefit file implies several payments.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name = "status" type = "xs:string">
						<xs:annotation>
							<xs:documentation>Status of the benefit file.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name = "benefitType" type = "xs:string">
						<xs:annotation>
							<xs:documentation>Type of the benefit (single payment, annuity ...)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name = "originType" type = "xs:string">
						<xs:annotation>
							<xs:documentation>Origin of the benefit (claim, surrender, term ...)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name = "originIdentifier" type = "xs:string">
						<xs:annotation>
							<xs:documentation/>
						</xs:annotation>
					</xs:element>
					<xs:element name = "paymentAmount" type = "amt:Amount">
						<xs:annotation>
							<xs:documentation>Payable amount of the benefit file (after fees deduction).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs = "0" name = "netAmount" type = "amt:Amount">
						<xs:annotation>
							<xs:documentation>Net amount of the benefit file (after tax deduction).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name = "beneficiary" type = "thp:ThirdPartyShortDesc">
						<xs:annotation>
							<xs:documentation>Beneficiary of the benefit file.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
		</xs:schema>
		<xsd:schema elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/core/model/claim" xmlns = "http://www.bsb.com/is/xml/core/model/claim" xmlns:amt = "http://www.bsb.com/is/xml/core/model/util/amount" xmlns:benef = "http://www.bsb.com/is/xml/core/model/benefitfile" xmlns:cov = "http://www.bsb.com/is/xml/core/model/coverageclaimable" xmlns:par = "http://www.bsb.com/is/xml/core/model/util/parameter" xmlns:thp = "http://www.bsb.com/is/xml/integration/model/thirdparty" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:import namespace = "http://www.bsb.com/is/xml/integration/model/thirdparty"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/util/amount"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/coverageclaimable"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/util/parameter"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/benefitfile"/>
			<xsd:element name = "ClaimShortDescription" type = "ClaimShortDescription"/>
			<xsd:complexType name = "ClaimShortDescription">
				<xsd:sequence>
					<xsd:element name = "claimId" type = "xsd:string"/>
					<xsd:element name = "claimType" type = "xsd:string"/>
					<xsd:element name = "claimStatus" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "acceptanceStatus" type = "xsd:string"/>
					<xsd:element name = "claimDate" type = "xsd:date"/>
					<xsd:element name = "notificationDate" type = "xsd:date"/>
					<xsd:element name = "recordingDate" type = "xsd:date"/>
					<xsd:element name = "lifeAssured" type = "thp:ThirdPartyShortDesc"/>
					<xsd:element minOccurs = "0" name = "benefitTotalAmount" type = "amt:Amount"/>
					<xsd:element minOccurs = "0" name = "aggregatedMode" type = "xsd:boolean"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "ClaimShortDescriptionList" type = "ClaimShortDescriptionList"/>
			<xsd:complexType name = "ClaimShortDescriptionList">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" ref = "ClaimShortDescription"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "ClosingPolicyList" type = "ClosingPolicyList"/>
			<xsd:complexType name = "ClosingPolicyList">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" ref = "ClosingPolicy"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "ClosingPolicy" type = "ClosingPolicy"/>
			<xsd:complexType name = "ClosingPolicy">
				<xsd:sequence>
					<xsd:element name = "policyNumber" type = "xsd:string"/>
					<xsd:element name = "productComponentNumber" type = "xsd:string"/>
					<xsd:element name = "coverageType" type = "xsd:string"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "ClaimDetails">
				<xsd:complexContent>
					<xsd:extension base = "ClaimShortDescription">
						<xsd:sequence>
							<xsd:element name = "claimableCoverages" type = "cov:ClaimableCoverageDetailsList"/>
							<xsd:element minOccurs = "0" name = "benefitFiles" type = "benef:BenefitFileList"/>
							<xsd:element minOccurs = "0" name = "claimParameters" type = "par:GenericParameterList"/>
							<xsd:element minOccurs = "0" name = "claimActions" type = "ClaimActionList"/>
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:simpleType name = "ClaimAction">
				<xsd:annotation>
					<xsd:documentation>Claim action</xsd:documentation>
				</xsd:annotation>
				<xsd:restriction base = "xsd:string">
					<xsd:enumeration value = "BENEFICIARIES">
						<xsd:annotation>
							<xsd:documentation/>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "OPEN">
						<xsd:annotation>
							<xsd:documentation/>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "CLOSE">
						<xsd:annotation>
							<xsd:documentation/>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "SEND_TO_BENEFIT">
						<xsd:annotation>
							<xsd:documentation/>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "BENEFIT_ACCEPTED">
						<xsd:annotation>
							<xsd:documentation/>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "BENEFIT_REFUSED">
						<xsd:annotation>
							<xsd:documentation/>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "CLAIM_CANCELED">
						<xsd:annotation>
							<xsd:documentation/>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "BENEFIT_MANUAL_OVERRIDE">
						<xsd:annotation>
							<xsd:documentation/>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "CHANGE_CLAIM_DETAILS">
						<xsd:annotation>
							<xsd:documentation/>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "APPLY_REVERSIBILITY">
						<xsd:annotation>
							<xsd:documentation/>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "MODIFY_LIFE_ASSURED_DETAILS">
						<xsd:annotation>
							<xsd:documentation/>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "UNACCEPT">
						<xsd:annotation>
							<xsd:documentation/>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "SEND_TO_ACCEPTANCE">
						<xsd:annotation>
							<xsd:documentation/>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "START_MANUAL_REVIEWING">
						<xsd:annotation>
							<xsd:documentation/>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "MODIFY_REVIEW_RULES">
						<xsd:annotation>
							<xsd:documentation/>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "TRIGGER_DISINVESTMENT">
						<xsd:annotation>
							<xsd:documentation/>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "CONSULT_BENEFICIARIES">
						<xsd:annotation>
							<xsd:documentation/>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "COMPLETE_QUESTIONNAIRES">
						<xsd:annotation>
							<xsd:documentation/>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "MODIFY_CUSTOM_FIELDS">
						<xsd:annotation>
							<xsd:documentation/>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "REINSURANCE_BENEFIT_MANUAL_OVERRIDE">
						<xsd:annotation>
							<xsd:documentation/>
						</xsd:annotation>
					</xsd:enumeration>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:complexType name = "ClaimActionList">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" name = "claimAction" type = "xsd:string"/>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:schema>
		<xsd:schema attributeFormDefault = "unqualified" elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/core/model/endorsement" xmlns = "http://www.bsb.com/is/xml/core/model/endorsement" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:element name = "EndorsementShortDescription" type = "EndorsementShortDescription"/>
			<xsd:complexType name = "EndorsementShortDescription">
				<xsd:sequence>
					<xsd:element minOccurs = "0" name = "operationId" type = "xsd:string"/>
					<xsd:element name = "endorsementNumber" type = "xsd:string"/>
					<xsd:element name = "endorsementTypeCodeId" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "endorsementSubTypeCodeId" type = "xsd:string"/>
					<xsd:element name = "effectiveDate" type = "xsd:date"/>
					<xsd:element name = "endorsementStatusCodeId" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "proposalId" type = "xsd:string"/>
					<xsd:element name = "policyNumber" type = "xsd:string"/>
					<xsd:element name = "pcNumber" type = "xsd:string"/>
					<xsd:element name = "partnerId" type = "xsd:string"/>
					<xsd:element name = "holderId" type = "xsd:string"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "EndorsementShortDescriptionList" type = "EndorsementShortDescriptionList"/>
			<xsd:complexType name = "EndorsementShortDescriptionList">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" ref = "EndorsementShortDescription"/>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:schema>
		<xsd:schema elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/traditionallife/model/product" xmlns:par = "http://www.bsb.com/is/xml/core/model/util/parameter" xmlns:prd = "http://www.bsb.com/is/xml/core/model/product" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/util/parameter"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/product"/>
			<xsd:complexType name = "TradLifeProductShortDescription">
				<xsd:annotation>
					<xsd:documentation>A TL Product and its parameters</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name = "product" type = "prd:ProductShortDescription">
						<xsd:annotation>
							<xsd:documentation>Basic product description</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "needLifeAssured" nillable = "false" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>False only iff the product and its coverages
						forbids any life assured (some annuity coverages)
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "parameters">
						<xsd:complexType>
							<xsd:sequence maxOccurs = "unbounded" minOccurs = "0">
								<xsd:element name = "parameter" type = "par:GenericParameter">
									<xsd:annotation>
										<xsd:documentation>The product generic parameters</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "simulationInputParameters">
						<xsd:complexType>
							<xsd:sequence maxOccurs = "unbounded" minOccurs = "0">
								<xsd:element name = "parameter" type = "par:GenericParameter">
									<xsd:annotation>
										<xsd:documentation>The simulation input parameters</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "TradLifeProductShortInput">
				<xsd:annotation>
					<xsd:documentation>A Product and its parameters, 
				short version used as input
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name = "productRef" type = "prd:ProductRef">
						<xsd:annotation>
							<xsd:documentation>Unique ref to an existing product</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "parameters">
						<xsd:complexType>
							<xsd:sequence maxOccurs = "unbounded" minOccurs = "0">
								<xsd:element name = "parameter" type = "par:InputParameter">
									<xsd:annotation>
										<xsd:documentation>A list of product parameters, short version
									for input
										</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "TraditionalLifeProductModificationInput">
				<xsd:annotation>
					<xsd:documentation>A Product and its parameters, 
				short version used as input
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element minOccurs = "1" name = "productRef" type = "prd:ProductRef">
						<xsd:annotation>
							<xsd:documentation>Unique ref to an existing product</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "parameters">
						<xsd:complexType>
							<xsd:sequence maxOccurs = "unbounded" minOccurs = "0">
								<xsd:element name = "parameter" type = "par:ParameterModificationInput">
									<xsd:annotation>
										<xsd:documentation>A list of product parameters, short version
									for input
										</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:schema>
		<xsd:schema elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/traditionallife/model/coverage/option" xmlns = "http://www.bsb.com/is/xml/traditionallife/model/coverage/option" xmlns:par = "http://www.bsb.com/is/xml/core/model/util/parameter" xmlns:wdg = "http://www.bsb.com/is/xml/core/model/util/wording" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/util/parameter"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/util/wording"/>
			<xsd:complexType name = "CoverageOption">
				<xsd:annotation>
					<xsd:documentation>One option for a coverage</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name = "identifier" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>option ID</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "wordingText" type = "wdg:WordingText">
						<xsd:annotation>
							<xsd:documentation>i18n'd description</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "isDefault" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>True for the default option in the list of
						options for the coverage
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "riskList" type = "CoverageRiskList">
						<xsd:annotation>
							<xsd:documentation>List of Risk and benefits for this option</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "optionParameters" type = "optionParameters">
						<xsd:annotation>
							<xsd:documentation>Generic parameters for this option</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "optionParameters">
				<xsd:sequence maxOccurs = "unbounded" minOccurs = "0">
					<xsd:element name = "parameter" type = "par:GenericParameter"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "CoverageRiskList">
				<xsd:annotation>
					<xsd:documentation>List of Risk and benefits</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "CoverageRisk" type = "CoverageRisk"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "CoverageRisk">
				<xsd:annotation>
					<xsd:documentation>A Risk and benefit</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name = "riskType" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Type of risk. ExtId of the RiskType hardCode:
						LIFE, TERM...
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "benefitType" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Type of benefit. ExtId of the BenefitType
						hardCode: SINGLE_CAPITAL, ANNUITY...
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "referenceCapital" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>True if the computed value is a reference
						capital
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "coverageOptionList">
				<xsd:annotation>
					<xsd:documentation>List of options for a coverage</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence maxOccurs = "unbounded" minOccurs = "0">
					<xsd:element name = "option" type = "CoverageOption"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "CoverageOptionInput">
				<xsd:annotation>
					<xsd:documentation>One option for a coverage, short version for input</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name = "identifier" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>option ID</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "optionParameters" type = "optionParametersInput">
						<xsd:annotation>
							<xsd:documentation>values of generic parameters for this option,
						short version for input
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "optionParametersInput">
				<xsd:sequence maxOccurs = "unbounded" minOccurs = "0">
					<xsd:element name = "parameter" type = "par:InputParameter"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "coverageOptionInputList">
				<xsd:annotation>
					<xsd:documentation>List of options for a coverage, short version for
				input
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence maxOccurs = "unbounded" minOccurs = "0">
					<xsd:element name = "option" type = "CoverageOptionInput"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "CoverageOptionModificationInput">
				<xsd:annotation>
					<xsd:documentation>One option for a coverage, short version for input</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name = "identifier" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>option ID</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "optionParameterList" type = "par:ParameterListModificationInput">
						<xsd:annotation>
							<xsd:documentation>values of generic parameters for this option,
						short version for input
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:schema>
		<xsd:schema elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/traditionallife/model/coverage/affinitygroup" xmlns = "http://www.bsb.com/is/xml/traditionallife/model/coverage/affinitygroup" xmlns:wdg = "http://www.bsb.com/is/xml/core/model/util/wording" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/util/wording"/>
			<xsd:complexType name = "AffinityGroup">
				<xsd:annotation>
					<xsd:documentation>Affinity group for third party rebates</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name = "identifier" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>ID of the group</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "wordingText" type = "wdg:WordingText">
						<xsd:annotation>
							<xsd:documentation>i18n'd description of the group</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "statusCodeId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>status of the group. ExtId of the
						AffinityGroupStatus hardCode: ACTIVE, INACTIVE
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "beginValidity" type = "xsd:date">
						<xsd:annotation>
							<xsd:documentation>Start date for this group validity period</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "endValidity" type = "xsd:date">
						<xsd:annotation>
							<xsd:documentation>End date for this group validity period</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "isMember" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>True if prospect member of group</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "applyRebate" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>True if this prospect has applied rebate for
						this group
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "affinityGroupList">
				<xsd:annotation>
					<xsd:documentation>List of affinity groups</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence maxOccurs = "unbounded" minOccurs = "0">
					<xsd:element name = "affinityGroup" type = "AffinityGroup"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "AffinityGroupInput">
				<xsd:annotation>
					<xsd:documentation>Affinity group, short version for input</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name = "identifier" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>group ID</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "isSelected" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>True if this group is selected</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "affinityGroupInputList">
				<xsd:annotation>
					<xsd:documentation>List of affinity groups, short version for input</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence maxOccurs = "unbounded" minOccurs = "0">
					<xsd:element name = "affinityGroup" type = "AffinityGroupInput"/>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:schema>
		<xsd:schema attributeFormDefault = "unqualified" elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/core/model/util/date" xmlns = "http://www.bsb.com/is/xml/core/model/util/date" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:element name = "DateInterval" type = "DateInterval"/>
			<xsd:complexType name = "DateInterval">
				<xsd:annotation>
					<xsd:documentation>A date interval</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element minOccurs = "0" name = "startDate" type = "xsd:date">
						<xsd:annotation>
							<xsd:documentation>Start date for the interval</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "endDate" type = "xsd:date">
						<xsd:annotation>
							<xsd:documentation>End date of the interval</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:schema>
		<xsd:schema elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/traditionallife/model/coverage" xmlns = "http://www.bsb.com/is/xml/traditionallife/model/coverage" xmlns:afg = "http://www.bsb.com/is/xml/traditionallife/model/coverage/affinitygroup" xmlns:amt = "http://www.bsb.com/is/xml/core/model/util/amount" xmlns:date = "http://www.bsb.com/is/xml/core/model/util/date" xmlns:opt = "http://www.bsb.com/is/xml/traditionallife/model/coverage/option" xmlns:par = "http://www.bsb.com/is/xml/core/model/util/parameter" xmlns:role = "http://www.bsb.com/is/xml/core/model/role/policy" xmlns:wdg = "http://www.bsb.com/is/xml/core/model/util/wording" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:import namespace = "http://www.bsb.com/is/xml/traditionallife/model/coverage/option"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/traditionallife/model/coverage/affinitygroup"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/util/wording"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/util/date"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/util/amount"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/util/parameter"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/role/policy"/>
			<xsd:element name = "TradLifeCoverageList" type = "TradLifeCoverageList"/>
			<xsd:complexType name = "TradLifeCoverageList">
				<xsd:annotation>
					<xsd:documentation>List of TL coverages</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence maxOccurs = "unbounded" minOccurs = "0">
					<xsd:element name = "coverage" type = "TradLifeCoverage"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "TradLifeCoverage" type = "TradLifeCoverage"/>
			<xsd:complexType name = "TradLifeCoverage">
				<xsd:annotation>
					<xsd:documentation>A Traditional life coverage</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name = "identifier" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Coverage Identifier</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "coverageType" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Coverage type abstract code</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "wordingText" type = "wdg:WordingText">
						<xsd:annotation>
							<xsd:documentation>i18n'd coverage description</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "position" type = "xsd:int">
						<xsd:annotation>
							<xsd:documentation>Position of the coverage in the list</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element default = "false" name = "isMainCoverage" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>True only for the single main coverage</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element default = "false" name = "isMandatory" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>True if the coverage is mandatory</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element default = "false" name = "isSelected" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>True if the coverage is selected</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element default = "true" name = "isActive" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>False if the coverage isn't active
                    
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "coveredPeriod" type = "date:DateInterval">
						<xsd:annotation>
							<xsd:documentation>Covered period</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "lifeAssuredList" type = "role:LifeAssuredList">
						<xsd:annotation>
							<xsd:documentation>List of life assured (LA). Generally only one LA
						is defined per coverage, but the main coverage can have 2. Some
						specific coverages have no LA at all (annuities)
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "coverageParameterList" type = "par:GenericParameterList">
						<xsd:annotation>
							<xsd:documentation>Generic parameters of the coverage</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "coverageOptionList" type = "opt:coverageOptionList">
						<xsd:annotation>
							<xsd:documentation>Options for the coverage</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "affinityGroupList" type = "afg:affinityGroupList">
						<xsd:annotation>
							<xsd:documentation>List of affinity groups</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "sliceList" type = "CoverageSliceList">
						<xsd:annotation>
							<xsd:documentation>List of slices, not yet implemented</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "paymentEndDate" type = "xsd:date"/>
					<xsd:element name = "status" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "capital" type = "CoverageCapital">
						<xsd:annotation>
							<xsd:documentation>Capital amount for this coverage</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "premium" type = "amt:Amount">
						<xsd:annotation>
							<xsd:documentation>Premium amount for this coverage</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "covDefLinkType" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Coverage definition link type</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "CoverageCapital">
				<xsd:sequence>
					<xsd:element name = "riskCapitalList" type = "RiskCapitalList">
						<xsd:annotation>
							<xsd:documentation>List of risk capital.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "RiskCapitalList">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" name = "riskCapital" type = "RiskCapital">
						<xsd:annotation>
							<xsd:documentation>The risk capital definition.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "RiskCapital">
				<xsd:sequence>
					<xsd:element name = "riskType" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>The risk type.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "capital" type = "Capital">
						<xsd:annotation>
							<xsd:documentation>The risk capital definition. Can be an amount or a capital table.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "Capital">
				<xsd:sequence>
					<xsd:choice>
						<xsd:element name = "capitalAmount" type = "amt:Amount">
							<xsd:annotation>
								<xsd:documentation>The capital amount.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name = "capitalTable" type = "CapitalTableElementList">
							<xsd:annotation>
								<xsd:documentation>The capital table list.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element minOccurs = "0" name = "capitalParameters" type = "par:GenericParameterList"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "CapitalTableElementList">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "capitalTableElement" type = "CapitalTableElement">
						<xsd:annotation>
							<xsd:documentation>The capital table amount</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "CapitalTableElement">
				<xsd:sequence>
					<xsd:element name = "dateFrom" type = "xsd:date">
						<xsd:annotation>
							<xsd:documentation>The capital table element date from</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "dateTo" type = "xsd:date">
						<xsd:annotation>
							<xsd:documentation>The capital table element date to</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "amount" type = "amt:Amount">
						<xsd:annotation>
							<xsd:documentation>The capital table element amount</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "CoverageSliceList" type = "CoverageSliceList"/>
			<xsd:complexType name = "CoverageSliceList">
				<xsd:annotation>
					<xsd:documentation>List of coverage slices</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "CoverageSlice" type = "CoverageSlice"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "CoverageSlice" type = "CoverageSlice"/>
			<xsd:complexType name = "CoverageSlice">
				<xsd:annotation>
					<xsd:documentation>A slice of a coverage</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name = "identifier" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Slice identifier (integer)</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "type" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>ExtId of the SliceType HardCode: PREMIUM,
						PROFITSHARING...
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "status" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>ExtId of the PricingSliceStatus: ACTIVE or
						INACTIVE
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "baseCapital" type = "amt:Amount">
						<xsd:annotation>
							<xsd:documentation>Base capital amount</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "technicalBase" type = "TechnicalBase">
						<xsd:annotation>
							<xsd:documentation>Technical base</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "version" type = "xsd:integer">
						<xsd:annotation>
							<xsd:documentation>slice version</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "premiumType" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>extId of the PremiumType abstract code:
						UNIQUEPREM, REGULPREM...
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "premium" type = "amt:Amount">
						<xsd:annotation>
							<xsd:documentation>Premium amount</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "purePremium" type = "amt:Amount">
						<xsd:annotation>
							<xsd:documentation>Pure premium amount</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "parameterList" type = "par:GenericParameterList">
						<xsd:annotation>
							<xsd:documentation>List of generic parameters (from coverage)</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "TechnicalBase" type = "TechnicalBase"/>
			<xsd:complexType name = "TechnicalBase">
				<xsd:annotation>
					<xsd:documentation>A Technical base</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name = "identifier" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>ExtId of the technical base</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "parameterList" type = "par:GenericParameterList">
						<xsd:annotation>
							<xsd:documentation>List of generic parameters</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "TradLifeCoverageInputList" type = "TradLifeCoverageInputList"/>
			<xsd:complexType name = "TradLifeCoverageInputList">
				<xsd:annotation>
					<xsd:documentation>List of TL coverages for a product, short version
				for input
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence maxOccurs = "unbounded" minOccurs = "0">
					<xsd:element name = "coverage" type = "TradLifeCoverageInput"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "TradLifeCoverageInput" type = "TradLifeCoverageInput"/>
			<xsd:complexType name = "TradLifeCoverageInput">
				<xsd:annotation>
					<xsd:documentation>A Traditional life coverage, short version for
				input
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name = "identifier" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Coverage Identifier</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "position" type = "xsd:int">
						<xsd:annotation>
							<xsd:documentation>Position of the coverage in the list</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element default = "false" name = "isSelected" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>True if this coverage is selected</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "lifeAssuredList" type = "role:LifeAssuredInputList">
						<xsd:annotation>
							<xsd:documentation>List of life assured (LA), short versoin for
						input. Generally only one LA is defined per coverage, but the main
						coverage can have 2. Some specific coverages have no LA at all
						(annuities)
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "coverageParameterList" type = "par:InputParameterList">
						<xsd:annotation>
							<xsd:documentation>Generic parameters of the coverage, short
						version for input
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "coverageOption" type = "opt:CoverageOptionInput">
						<xsd:annotation>
							<xsd:documentation>Options for the coverage, short version for
						input
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "affinityGroupList" type = "afg:affinityGroupInputList">
						<xsd:annotation>
							<xsd:documentation>List of affinity groups</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "TraditionalLifeCoverageModificationInputList" type = "TraditionalLifeCoverageModificationInputList"/>
			<xsd:complexType name = "TraditionalLifeCoverageModificationInputList">
				<xsd:annotation>
					<xsd:documentation>List of TL coverages for a product, short version
				for input
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence maxOccurs = "unbounded" minOccurs = "0">
					<xsd:element name = "coverage" type = "TraditionalLifeCoverageModificationInput"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "TraditionalLifeCoverageModificationInput" type = "TraditionalLifeCoverageModificationInput"/>
			<xsd:complexType name = "TraditionalLifeCoverageModificationInput">
				<xsd:annotation>
					<xsd:documentation>A Traditional life coverage, short version for
				input
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element minOccurs = "0" name = "identifier" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Coverage Identifier</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "1" name = "position" type = "xsd:int">
						<xsd:annotation>
							<xsd:documentation>Position of the coverage in the list</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element default = "false" name = "isSelected" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>True if this coverage is selected</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "lifeAssuredList" type = "role:LifeAssuredModificationInputList">
						<xsd:annotation>
							<xsd:documentation>List of life assured (LA), short versoin for
						input. Generally only one LA is defined per coverage, but the main
						coverage can have 2. Some specific coverages have no LA at all
						(annuities)
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "coverageParameterList" type = "par:ParameterListModificationInput">
						<xsd:annotation>
							<xsd:documentation>Generic parameters of the coverage, short
						version for input
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "coverageOption" type = "opt:CoverageOptionModificationInput">
						<xsd:annotation>
							<xsd:documentation>Options for the coverage, short version for
						input
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "affinityGroupList" type = "afg:affinityGroupInputList">
						<xsd:annotation>
							<xsd:documentation>List of affinity groups</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:schema>
		<xsd:schema elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/traditionallife/model/pricing/additionalamount" xmlns = "http://www.bsb.com/is/xml/traditionallife/model/pricing/additionalamount" xmlns:amt = "http://www.bsb.com/is/xml/core/model/util/amount" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/util/amount"/>
			<xsd:element name = "AdditionalAmountList" type = "AdditionalAmountList"/>
			<xsd:complexType name = "AdditionalAmountList">
				<xsd:annotation>
					<xsd:documentation>List of additional amounts provided by
				the customer
				(grouped by payment mode)
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence maxOccurs = "unbounded" minOccurs = "0">
					<xsd:element ref = "AdditionalAmount"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "AdditionalAmount" type = "AdditionalAmount"/>
			<xsd:complexType name = "AdditionalAmount">
				<xsd:annotation>
					<xsd:documentation>An additional amount provided by
				the customer for a
				specific payment mode
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name = "amount" type = "amt:Amount">
						<xsd:annotation>
							<xsd:documentation>amount, ccy taken from policy</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "amountPaymentMode" type = "amountPaymentMode">
						<xsd:annotation>
							<xsd:documentation>ExtId of the PaymentMode hardcode</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "technicalBaseId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>ExternalId of the technical base</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "amountPaymentMode" type = "amountPaymentMode"/>
			<xsd:simpleType name = "amountPaymentMode">
				<xsd:annotation>
					<xsd:documentation>ExtId of the PaymentMode hardcode</xsd:documentation>
				</xsd:annotation>
				<xsd:restriction base = "xsd:NMTOKEN">
					<xsd:enumeration value = "POLICY"/>
					<xsd:enumeration value = "TRANSFER"/>
					<xsd:enumeration value = "POLICY_TRANSFER"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:schema>
		<xsd:schema elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/traditionallife/model/pricing" xmlns = "http://www.bsb.com/is/xml/traditionallife/model/pricing" xmlns:admt = "http://www.bsb.com/is/xml/traditionallife/model/pricing/additionalamount" xmlns:amt = "http://www.bsb.com/is/xml/core/model/util/amount" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/util/amount"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/traditionallife/model/pricing/additionalamount"/>
			<xsd:complexType name = "TraditionalLifePricing">
				<xsd:annotation>
					<xsd:documentation>TL Pricing context</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name = "refCurrencyCodeId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>The currency ISO code (USD, EUR) for all amounts
						below
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "purePremium" type = "amt:Amount">
						<xsd:annotation>
							<xsd:documentation>Pure premium amount</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "inventoryCharges" type = "amt:Amount">
						<xsd:annotation>
							<xsd:documentation>Inventory charges amount</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "commercialCharges" type = "amt:Amount">
						<xsd:annotation>
							<xsd:documentation>Commercial charges amount</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "extraPremium" type = "amt:Amount">
						<xsd:annotation>
							<xsd:documentation>Extra premium amount</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "rebate" type = "amt:Amount">
						<xsd:annotation>
							<xsd:documentation>Rebate amount</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "totalPremium" type = "amt:Amount">
						<xsd:annotation>
							<xsd:documentation>Total premium amount</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "fractioningCost" type = "amt:Amount">
						<xsd:annotation>
							<xsd:documentation>Fractioning cost amount</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "tax" type = "amt:Amount">
						<xsd:annotation>
							<xsd:documentation>Tax amount</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "premiumFees" type = "amt:Amount">
						<xsd:annotation>
							<xsd:documentation>Premium fees amount</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "annualPremium" type = "amt:Amount">
						<xsd:annotation>
							<xsd:documentation>Annual premium amount</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "theoreticalSurrenderValue" type = "amt:Amount">
						<xsd:annotation>
							<xsd:documentation>Theoretical surrender amount</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "pricing">
						<xsd:annotation>
							<xsd:documentation>TL pricing information by coverage</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element maxOccurs = "unbounded" name = "coveragePricing">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name = "coverageId" type = "xsd:string">
												<xsd:annotation>
													<xsd:documentation>Identifier of the CoverageDefinition</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element name = "coveragePosition" type = "xsd:int">
												<xsd:annotation>
													<xsd:documentation>position of the CoverageDefinitionLink for
												ordering
													</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element name = "coveragePremium" type = "amt:Amount">
												<xsd:annotation>
													<xsd:documentation>Coverage premium amount, computed by the
												pricing
													</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element name = "coverageCapital" type = "amt:Amount">
												<xsd:annotation>
													<xsd:documentation>Capital amount, from coverage parameters</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element name = "coverageStartDate" type = "xsd:date">
												<xsd:annotation>
													<xsd:documentation>Coverage start date from coverage
												parameters
													</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element name = "coverageEndDate" type = "xsd:date">
												<xsd:annotation>
													<xsd:documentation>Coverage end date from coverage parameters
												(infinite for life annuity coverages)
													</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element minOccurs = "0" name = "coveragePaymentEndDate" type = "xsd:date">
												<xsd:annotation>
													<xsd:documentation>For regular payments, payment end date,
												computed from coverage parameters (not for life annuity
												coverages
													</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
										</xsd:sequence>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "valuation">
						<xsd:annotation>
							<xsd:documentation>TL pricing information: valuations</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element maxOccurs = "unbounded" name = "valuationItem">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name = "valueDate" type = "xsd:date">
												<xsd:annotation>
													<xsd:documentation>Valuation date</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element name = "inventoryReserve" type = "amt:Amount">
												<xsd:annotation>
													<xsd:documentation>Inventory reserve amount</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element name = "redemptionReserve" type = "amt:Amount">
												<xsd:annotation>
													<xsd:documentation>Redemption reserve amount</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
										</xsd:sequence>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "TradLifePricingContextInput" type = "TradLifePricingContextInput"/>
			<xsd:complexType name = "TradLifePricingContextInput">
				<xsd:annotation>
					<xsd:documentation>Minimum pricing information required to price and
				create a TL policy. Note: the reference currency is defined on the
				policy
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name = "pricingMode" type = "pricingMode">
						<xsd:annotation>
							<xsd:documentation>Pricing computation mode</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "premium" type = "amt:Amount">
						<xsd:annotation>
							<xsd:documentation>Premium amount (ccy from Policy)</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "mainCoveragePremium" type = "amt:Amount">
						<xsd:annotation>
							<xsd:documentation>Main coverage premium amount (ccy from Policy)
                    
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "initialReserve" type = "amt:Amount">
						<xsd:annotation>
							<xsd:documentation>Initial reserve amount (ccy from Policy)</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "countryOfLaw" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>ExtId of the country of law (BE, LU, FR...)</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "taxCountry" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>ExtId of the tax country (BE, LU, FR...)</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "paymentMode" type = "paymentMode">
						<xsd:annotation>
							<xsd:documentation>Customer payment mode</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "additionalAmounts" type = "admt:AdditionalAmountList">
						<xsd:annotation>
							<xsd:documentation>Optional list of additional amounts provided by
						the customer (grouped by payment mode)
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "withdrawalAmount" type = "amt:Amount">
						<xsd:annotation>
							<xsd:documentation>Withdrawal amount</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "pricingMode" type = "pricingMode"/>
			<xsd:simpleType name = "pricingMode">
				<xsd:annotation>
					<xsd:documentation>Pricing computation mode: how to compute capital
				or premiums
					</xsd:documentation>
				</xsd:annotation>
				<xsd:restriction base = "xsd:NMTOKEN">
					<xsd:enumeration value = "COMPUTE_PREMIUM">
						<xsd:annotation>
							<xsd:documentation>Compute premiums based on capital (eSolife Tech
						code: COVERAGE)
							</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "COMPUTE_CAPITAL">
						<xsd:annotation>
							<xsd:documentation>Compute capital based on premium (eSolife Tech
						code: PREMIUM)
							</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "COMPUTE_RESERVE">
						<xsd:annotation>
							<xsd:documentation>Compute reserve based on capital and
                        premiums(eSolife Tech code: RESERVE)
							</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "COMPUTE_RESERVE_SUBSTRACTION">
						<xsd:annotation>
							<xsd:documentation/>
						</xsd:annotation>
					</xsd:enumeration>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:element name = "paymentMode" type = "paymentMode"/>
			<xsd:simpleType name = "paymentMode">
				<xsd:annotation>
					<xsd:documentation>Payment mode for the customer</xsd:documentation>
				</xsd:annotation>
				<xsd:restriction base = "xsd:NMTOKEN">
					<xsd:enumeration value = "DIRECT_DEBIT">
						<xsd:annotation>
							<xsd:documentation>Direct debit (electronic)</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "CASH">
						<xsd:annotation>
							<xsd:documentation>Cash (money)</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "STANDING_ORDER">
						<xsd:annotation>
							<xsd:documentation>Standing order (French: ordre permanent)</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "AGENT_COLLECTION">
						<xsd:annotation>
							<xsd:documentation>Agent collection</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "CHEQUE">
						<xsd:annotation>
							<xsd:documentation>Cheque</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
					<xsd:enumeration value = "INTERNAL_DEBIT">
						<xsd:annotation>
							<xsd:documentation>Internal debit</xsd:documentation>
						</xsd:annotation>
					</xsd:enumeration>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:element name = "TraditionalLifePricingContextModificationInput" type = "TraditionalLifePricingContextModificationInput"/>
			<xsd:complexType name = "TraditionalLifePricingContextModificationInput">
				<xsd:annotation>
					<xsd:documentation>Minimum pricing information required to price and
				create a TL policy. Note: the reference currency is defined on the
				policy
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name = "pricingMode" type = "pricingMode">
						<xsd:annotation>
							<xsd:documentation>Pricing computation mode</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "premium" type = "amt:Amount">
						<xsd:annotation>
							<xsd:documentation>Premium amount (ccy from Policy)</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "countryOfLaw" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>ExtId of the country of law (BE, LU, FR...)</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "taxCountry" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>ExtId of the tax country (BE, LU, FR...)</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "paymentMode" type = "paymentMode">
						<xsd:annotation>
							<xsd:documentation>Customer payment mode</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "additionalAmounts" type = "admt:AdditionalAmountList">
						<xsd:annotation>
							<xsd:documentation>Optional list of additional amounts provided by
						the customer (grouped by payment mode)
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "withdrawalAmount" type = "amt:Amount">
						<xsd:annotation>
							<xsd:documentation>Withdrawal amount</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:schema>
		<xsd:schema elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/traditionallife/model/policy/detail" xmlns = "http://www.bsb.com/is/xml/traditionallife/model/policy/detail" xmlns:amt = "http://www.bsb.com/is/xml/core/model/util/amount" xmlns:cfield = "http://www.bsb.com/is/xml/integration/model/customfields" xmlns:cl = "http://www.bsb.com/is/xml/traditionallife/model/clause" xmlns:cov = "http://www.bsb.com/is/xml/traditionallife/model/coverage" xmlns:prd = "http://www.bsb.com/is/xml/traditionallife/model/product" xmlns:pric = "http://www.bsb.com/is/xml/traditionallife/model/pricing" xmlns:role = "http://www.bsb.com/is/xml/core/model/role/policy" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:import namespace = "http://www.bsb.com/is/xml/integration/model/customfields"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/util/amount"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/role/policy"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/traditionallife/model/product"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/traditionallife/model/coverage"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/traditionallife/model/pricing"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/traditionallife/model/clause"/>
			<xsd:complexType name = "TradLifePolicyDetail">
				<xsd:sequence>
					<xsd:element name = "policyNumber" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>In creation requests, optional field to force
						the policyNumber. In endorsements, mandatory field.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "brokers" type = "role:BrokerList">
						<xsd:annotation>
							<xsd:documentation>The broker (role) that created the policy (only
						one for now)
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "holders" type = "role:HolderList">
						<xsd:annotation>
							<xsd:documentation>The policy holder roles (holder and co-holder)</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "product" type = "prd:TradLifeProductShortDescription">
						<xsd:annotation>
							<xsd:documentation>A TL Product and its parameters</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "coverageList" type = "cov:TradLifeCoverageList">
						<xsd:annotation>
							<xsd:documentation>List of selected TL coverages</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "payers" type = "role:PayerList">
						<xsd:annotation>
							<xsd:documentation>The payer (role). Only
						one supported now.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "proxies" type = "role:ProxyList">
						<xsd:annotation>
							<xsd:documentation>The proxy (role). Only
						one supported now
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "beneficiaries" type = "role:BeneficiaryList">
						<xsd:annotation>
							<xsd:documentation>The list of beneficiary (roles)</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "cessionHolders" type = "role:CessionHolderList">
						<xsd:annotation>
							<xsd:documentation>The list of cession holder (roles)</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "tradLifeClauseList" type = "cl:TradLifeClauseList">
						<xsd:annotation>
							<xsd:documentation>List of selected TL clauses</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "currency" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Policy reference currency ISO code (EUR, USD...)</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "issueDate" type = "xsd:date">
						<xsd:annotation>
							<xsd:documentation>Issue date</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "effectiveDate" type = "xsd:date">
						<xsd:annotation>
							<xsd:documentation>Effective date</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "deathCapital" type = "amt:Amount">
						<xsd:annotation>
							<xsd:documentation>Death capital amount (French: valeur en cas de
						décès)
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "lifeCapital" type = "amt:Amount">
						<xsd:annotation>
							<xsd:documentation>Life capital amount (French: Valeur au terme /
						vie)
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "redemptionReserve" type = "amt:Amount">
						<xsd:annotation>
							<xsd:documentation>Redemption reserve amount (French: Valeur de
						Rachat)
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "customFieldList" type = "cfield:CustomFieldList">
						<xsd:annotation>
							<xsd:documentation>Policy's list of custom fields</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "TradLifePolicyDetailInput">
				<xsd:annotation>
					<xsd:documentation>The policy (completed proposal) to validate and
				create, short version for input
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name = "policyNumber" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>To force the policyNumber. Error if it already
						exists.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "brokers" type = "role:BrokerInputList">
						<xsd:annotation>
							<xsd:documentation>The broker (role) that creates the policy (only
						one for now)
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "holders" type = "role:HolderInputList">
						<xsd:annotation>
							<xsd:documentation>The policy holder roles (holder and co-holder)</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "product" type = "prd:TradLifeProductShortInput">
						<xsd:annotation>
							<xsd:documentation>A TL Product and its parameters, short version
						for input
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "coverageList" type = "cov:TradLifeCoverageInputList">
						<xsd:annotation>
							<xsd:documentation>List of selected TL coverages, short version for
						input
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "payers" type = "role:PayerInputList">
						<xsd:annotation>
							<xsd:documentation>The payer (role), short version for input. Only
						one supported now.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "proxies" type = "role:ProxyInputList">
						<xsd:annotation>
							<xsd:documentation>The proxy (role), short version for input. Only
						one supported now
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "beneficiaries" type = "role:BeneficiaryInputList">
						<xsd:annotation>
							<xsd:documentation>The list of beneficiary (roles), short version
						for input.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "cessionHolders" type = "role:CessionHolderInputList">
						<xsd:annotation>
							<xsd:documentation>The list of cession holder (roles), short
						version for input.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "tradLifeClauseList" type = "cl:TradLifeClauseInputList">
						<xsd:annotation>
							<xsd:documentation>List of selected TL clauses, short version
						for
						input
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "currency" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Currency ISO code: USD, EUR...</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "pricingContext" type = "pric:TradLifePricingContextInput">
						<xsd:annotation>
							<xsd:documentation>TL Pricing context, short version for input.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "customFieldList" type = "cfield:CustomFieldList">
						<xsd:annotation>
							<xsd:documentation>Policy's list of custom fields. Only name, value
						are mandatory for input.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "endorsementEffectiveDate" type = "xsd:date">
						<xsd:annotation>
							<xsd:documentation>Effective date for policy endorsements and only
						endorsements. Error otherwise.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "TraditionalLifePolicyModificationInput">
				<xsd:annotation>
					<xsd:documentation>The policy (completed proposal) to validate and
				create, short version for input
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element minOccurs = "1" name = "policyNumber" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>To force the policyNumber. Error if it already
						exists.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "currency" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Currency ISO code: USD, EUR...</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "brokers" type = "role:BrokerModificationInputList">
						<xsd:annotation>
							<xsd:documentation>The broker (role) that creates the policy (only
						one for now)
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "holders" type = "role:HolderModificationInputList">
						<xsd:annotation>
							<xsd:documentation>The policy holder roles (holder and co-holder)</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "payers" type = "role:PayerModificationInputList">
						<xsd:annotation>
							<xsd:documentation>The payer (role), short version for input. Only
						one supported now.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "proxies" type = "role:ProxyModificationInputList">
						<xsd:annotation>
							<xsd:documentation>The proxy (role), short version for input. Only
						one supported now
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "beneficiaries" type = "role:BeneficiaryModificationInputList">
						<xsd:annotation>
							<xsd:documentation>The list of beneficiary (roles), short version
						for input.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "cessionHolders" type = "role:CessionHolderModificationInputList">
						<xsd:annotation>
							<xsd:documentation>The list of cession holder (roles), short
						version for input.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "product" type = "prd:TraditionalLifeProductModificationInput">
						<xsd:annotation>
							<xsd:documentation>A TL Product and its parameters, short version
						for input
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "coverageList" type = "cov:TraditionalLifeCoverageModificationInputList">
						<xsd:annotation>
							<xsd:documentation>List of selected TL coverages, short version for
						input
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "tradLifeClauseList" type = "cl:TraditionalLifeClauseModificationInputList">
						<xsd:annotation>
							<xsd:documentation>List of selected TL clauses, short version
						for
						input
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "pricingContext" type = "pric:TraditionalLifePricingContextModificationInput">
						<xsd:annotation>
							<xsd:documentation>TL Pricing context, short version for input.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "customFieldList" type = "cfield:CustomFieldInputList">
						<xsd:annotation>
							<xsd:documentation>Policy's list of custom fields. Only name, value
						are mandatory for input.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:schema>
		<xsd:schema elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/core/model/policy" xmlns = "http://www.bsb.com/is/xml/core/model/policy" xmlns:field = "http://www.bsb.com/is/xml/integration/model/customfields" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:import namespace = "http://www.bsb.com/is/xml/integration/model/customfields"/>
			<xsd:complexType name = "PolicyShortDescription">
				<xsd:sequence>
					<xsd:element minOccurs = "1" name = "policyNumber" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "pcNumber" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Number of the product component</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "applicationForm" nillable = "true" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Application form number</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "partnerId" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "partnerLabel" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "holderId" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "holderLabel" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "holderLastName" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "holderFirstName" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "holderBirthDate" type = "xsd:date"/>
					<xsd:element minOccurs = "0" name = "setupDate" type = "xsd:date">
						<xsd:annotation>
							<xsd:documentation>Setup date of the product component</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "issueDate" type = "xsd:date">
						<xsd:annotation>
							<xsd:documentation>Setup date of the product component like setupDate</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "effectiveDate" type = "xsd:date"/>
					<xsd:element minOccurs = "0" name = "termDate" type = "xsd:date"/>
					<xsd:element minOccurs = "0" name = "statusCodeId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Corresponds to a IntStatus code. Example values: FORCE, TERM</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "productId" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "productVersion" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "productFamily" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "productName" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "productTypeCodeId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Corresponds to a ProductType hardcode. Example values: GSB, PENSION, VIP</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "productDescription" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "businessLineCodeId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Corresponds to a BusinessLine code. Example values: UNIT_LINKED, TRAD_LIFE</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "currencyCodeId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Corresponds to a ISO currency code. Example values: USD, EUR</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "countryOfLawCodeId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Corresponds to a Country code. Example values: BE, LU, FR</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "taxCountryCodeId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Corresponds to a Country code. Example values: BE, LU, FR</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "depositAccountNumber" nillable = "true" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "isVisible" type = "xsd:boolean"/>
					<xsd:element minOccurs = "0" name = "CustomFieldList" type = "field:CustomFieldList"/>
					<xsd:element minOccurs = "0" name = "ActuarialValue" type = "xsd:decimal"/>
					<xsd:element minOccurs = "0" name = "lastEndorsementNumber" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "lastEndorsementDate" type = "xsd:date"/>
					<xsd:element minOccurs = "0" name = "isPolicyReduced" type = "xsd:boolean"/>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:schema>
		<xsd:schema elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/traditionallife/model/policy/detail/general" xmlns = "http://www.bsb.com/is/xml/traditionallife/model/policy/detail/general" xmlns:ebc = "http://www.bsb.com/is/xml/traditionallife/model/policy/detail/basecapital" xmlns:pol = "http://www.bsb.com/is/xml/core/model/policy" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/policy"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/util/amount"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/traditionallife/model/policy/detail/basecapital"/>
			<xsd:element name = "TradLifePolicyGeneral" type = "TradLifePolicyGeneral"/>
			<xsd:complexType name = "TradLifePolicyGeneral">
				<xsd:sequence>
					<xsd:element name = "generalInformation" type = "pol:PolicyShortDescription"/>
					<xsd:element name = "premiumTypeCodeId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Premium type: single / regular</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "paymentPeriodicityCodeId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Periodicity of the premium payment, if premium
						type is regular.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "paymentModeCodeId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Periodicity of the premium payment, if premium
						type is regular.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "pricingModeCodeId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Pricing computation mode</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "affinityGroupLabel" nillable = "true" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>The name of the (optional) affinity group.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "mainCoverageTypeCodeId" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>See coverage type: endowment, life, death etc.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "mainCoverageOption" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>See options defined on coverage definition: 10/10, 10/20 etc.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "hasPendingEndorsement" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation/>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "hasPendingClaim" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation/>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "hasOngoingLoan" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation/>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "nextIssueDate" type = "xsd:date">
						<xsd:annotation>
							<xsd:documentation>The next bill issue date.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "hasWaiverOfPremium" type = "xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>Flag defining if the PC has a waiver of premium.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "1" name = "reminderLevelCodeId" nillable = "true" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Reminder level of the PC</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "reminderDate" nillable = "true" type = "xsd:date">
						<xsd:annotation>
							<xsd:documentation>Date of the last reminder date.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "indexationTypeCodeId" nillable = "true" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>Type of indexation currently applied to the PC.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "indexationModelCodeId" nillable = "true" type = "xsd:string">
						<xsd:annotation>
							<xsd:documentation>The indexation model of the policy.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "lifeCapital" type = "xsd:decimal">
						<xsd:annotation>
							<xsd:documentation>Life capital amount (French: Valeur au terme /
						vie)
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name = "deathCapital" type = "xsd:decimal">
						<xsd:annotation>
							<xsd:documentation>Death capital amount (French: valeur en cas de
						décès)
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "lastDirectDebitDate" type = "xsd:date">
						<xsd:annotation>
							<xsd:documentation>Date of the last Direct Debit</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "nextDirectDebitDate" type = "xsd:date">
						<xsd:annotation>
							<xsd:documentation>Date of the next Direct Debit</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "refusedAttempts" type = "xsd:integer">
						<xsd:annotation>
							<xsd:documentation>Number of refused Direct Debits</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element maxOccurs = "1" minOccurs = "0" name = "endorsedBaseCapitals" type = "ebc:EndorsedBaseCapitals">
						<xsd:annotation>
							<xsd:documentation>endorsed base capital values</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:schema>
		<xsd:schema attributeFormDefault = "unqualified" elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/traditionallife/model/policy/detail/composition" xmlns = "http://www.bsb.com/is/xml/traditionallife/model/policy/detail/composition" xmlns:ada = "http://www.bsb.com/is/xml/traditionallife/model/pricing/additionalamount" xmlns:cov = "http://www.bsb.com/is/xml/traditionallife/model/coverage" xmlns:prd = "http://www.bsb.com/is/xml/traditionallife/model/product" xmlns:pri = "http://www.bsb.com/is/xml/traditionallife/model/pricing" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/util/amount"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/traditionallife/model/product"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/traditionallife/model/coverage"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/traditionallife/model/pricing"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/traditionallife/model/pricing/additionalamount"/>
			<xsd:element name = "TradLifePolicyComposition" type = "TradLifePolicyComposition"/>
			<xsd:complexType name = "TradLifePolicyComposition">
				<xsd:sequence>
					<xsd:element name = "parameterizedProduct" type = "prd:TradLifeProductShortDescription"/>
					<xsd:element minOccurs = "0" name = "parameterizedCoverages" type = "cov:TradLifeCoverageList"/>
					<xsd:element minOccurs = "0" name = "pricing" type = "pri:TraditionalLifePricing"/>
					<xsd:element minOccurs = "0" name = "additionalAmounts" type = "ada:AdditionalAmountList"/>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:schema>
		<xsd:schema attributeFormDefault = "unqualified" elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/traditionallife/model/policy/endorsement/detail" xmlns = "http://www.bsb.com/is/xml/traditionallife/model/policy/endorsement/detail" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:complexType name = "TradLifeEndorsementDetail">
				<xsd:sequence>
					<xsd:element name = "currentEndorsementNumber" type = "xsd:string"/>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:schema>
		<xsd:schema attributeFormDefault = "unqualified" elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/traditionallife/model/projection" xmlns = "http://www.bsb.com/is/xml/traditionallife/model/projection" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:complexType name = "TraditionalLifeProjection">
				<xsd:sequence>
					<xsd:element name = "refCurrencyCodeId" type = "xsd:string"/>
					<xsd:element name = "projectionList">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "projectionItem" type = "TraditionalLifeProjectionItem"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "TraditionalLifeProjectionItem">
				<xsd:sequence>
					<xsd:element minOccurs = "0" name = "hypothesis" type = "xsd:decimal"/>
					<xsd:element minOccurs = "0" name = "annuityAmount" type = "xsd:decimal"/>
					<xsd:element name = "termCapital" type = "xsd:decimal"/>
					<xsd:element minOccurs = "0" name = "values">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element maxOccurs = "unbounded" name = "valuationPoint" type = "ValuationPoint"/>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "ValuationPoint">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" name = "valuation" type = "Valuation"/>
				</xsd:sequence>
				<xsd:attribute name = "date" type = "xsd:date" use = "required"/>
			</xsd:complexType>
			<xsd:complexType name = "Valuation">
				<xsd:sequence>
					<xsd:element name = "value" type = "xsd:decimal"/>
					<xsd:element name = "valueType" type = "PricingValueType"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:simpleType name = "PricingValueType">
				<xsd:restriction base = "xsd:NMTOKEN">
					<xsd:enumeration value = "PURE_RESERVE"/>
					<xsd:enumeration value = "INVENTORY_RESERVE"/>
					<xsd:enumeration value = "MANAGEMENT_RESERVE"/>
					<xsd:enumeration value = "THEORICAL_REDEMPTION_RESERVE"/>
					<xsd:enumeration value = "REDEMPTION_RESERVE"/>
					<xsd:enumeration value = "LIFE_CAPITAL"/>
					<xsd:enumeration value = "DEATH_CAPITAL"/>
					<xsd:enumeration value = "REF_CAPITAL"/>
					<xsd:enumeration value = "EXTRA_PREMIUM"/>
					<xsd:enumeration value = "BILAN_RESERVE"/>
					<xsd:enumeration value = "RESIDUAL_CLIENT_ENGAGEMENT"/>
					<xsd:enumeration value = "CASH_FLOW"/>
					<xsd:enumeration value = "DISABILITY_TOTAL_AND_PERMANENT_CAPITAL"/>
					<xsd:enumeration value = "PURE_EXTRA_PREMIUM"/>
					<xsd:enumeration value = "TOTAL_PAID_PREMIUM"/>
					<xsd:enumeration value = "LIFE_REDUCTION_VALUE"/>
					<xsd:enumeration value = "DEATH_REDUCTION_VALUE"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:schema>
		<xsd:schema attributeFormDefault = "unqualified" elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/core/model/thirdparty/personlight/addresslight" xmlns = "http://www.bsb.com/is/xml/core/model/thirdparty/personlight/addresslight" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:complexType name = "AddressLight">
				<xsd:sequence>
					<xsd:element name = "addressee" type = "xsd:string"/>
					<xsd:element name = "street" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "number" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "zipCode" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "city" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "state" type = "xsd:string"/>
					<xsd:element name = "countryCodeId" type = "xsd:string"/>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:schema>
		<xsd:schema attributeFormDefault = "unqualified" elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/core/model/thirdparty/personlight" xmlns = "http://www.bsb.com/is/xml/core/model/thirdparty/personlight" xmlns:add = "http://www.bsb.com/is/xml/core/model/thirdparty/personlight/addresslight" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/thirdparty/personlight/addresslight"/>
			<xsd:complexType name = "PersonLight">
				<xsd:sequence>
					<xsd:element name = "solifeId" type = "xsd:string"/>
					<xsd:element name = "isMoralPerson" type = "xsd:boolean"/>
					<xsd:element name = "label" type = "xsd:string"/>
					<xsd:element name = "name" type = "xsd:string"/>
					<xsd:element name = "firstName" type = "xsd:string"/>
					<xsd:element name = "birthDate" type = "xsd:date"/>
					<xsd:element name = "genderCodeId" type = "xsd:string"/>
					<xsd:element name = "countryOfResidenceCodeId" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "legalFormCodeId" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "tradeRegisterCodeId" type = "xsd:string"/>
					<xsd:element name = "address" type = "add:AddressLight"/>
					<xsd:element minOccurs = "0" name = "isAnonymous" type = "xsd:boolean"/>
					<xsd:element name = "languageCodeId" type = "xsd:string"/>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:schema>
		<xsd:schema elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/traditionallife/model/offer/endorsedclausecompositor" xmlns = "http://www.bsb.com/is/xml/traditionallife/model/offer/endorsedclausecompositor" xmlns:cla = "http://www.bsb.com/is/xml/core/model/clause" xmlns:per = "http://www.bsb.com/is/xml/core/model/thirdparty/personlight" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/clause"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/thirdparty/personlight"/>
			<xsd:element name = "EndorsedClauseCompositor" type = "EndorsedClauseCompositor"/>
			<xsd:complexType name = "EndorsedClauseCompositor">
				<xsd:annotation>
					<xsd:documentation>Represents an exclusion clause</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name = "isMandatory" type = "xsd:boolean"/>
					<xsd:element minOccurs = "0" name = "compositorName" nillable = "false" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "startDate" type = "xsd:date"/>
					<xsd:element minOccurs = "0" name = "endDate" type = "xsd:date"/>
					<xsd:element name = "clause" type = "cla:Clause"/>
					<xsd:element name = "lifeAssured" type = "per:PersonLight"/>
					<xsd:element name = "clauseApplicability" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "clauseLevel" type = "xsd:int">
						<xsd:annotation>
							<xsd:documentation>Clause level, will be set to 1 if any level is defined</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "EndorsedClauseCompositorList">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "EndorsedClauseCompositor" type = "EndorsedClauseCompositor"/>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:schema>
		<xsd:schema attributeFormDefault = "unqualified" elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/core/model/customrule" xmlns = "http://www.bsb.com/is/xml/core/model/customrule" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:complexType name = "CustomRuleList">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "customRule" type = "CustomRule">
						<xsd:annotation/>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "CustomRule">
				<xsd:sequence>
					<xsd:element name = "type" type = "xsd:string">
						<xsd:annotation/>
					</xsd:element>
					<xsd:element name = "scope" type = "xsd:string">
						<xsd:annotation/>
					</xsd:element>
					<xsd:element name = "evaluationDate" type = "xsd:string">
						<xsd:annotation/>
					</xsd:element>
					<xsd:element name = "coverageValueList" type = "CoverageValueList">
						<xsd:annotation/>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "CoverageValueList">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "coverageValue" type = "CoverageValue">
						<xsd:annotation/>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "CoverageValue">
				<xsd:sequence>
					<xsd:element name = "coverageIdentifier" type = "xsd:string">
						<xsd:annotation/>
					</xsd:element>
					<xsd:element name = "coveragePosition" type = "xsd:integer">
						<xsd:annotation/>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "value" type = "xsd:decimal">
						<xsd:annotation/>
					</xsd:element>
					<xsd:element minOccurs = "0" name = "sliceValueList" type = "SliceValueList">
						<xsd:annotation/>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "SliceValueList">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "sliceValue" type = "SliceValue">
						<xsd:annotation/>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name = "SliceValue">
				<xsd:sequence>
					<xsd:element name = "sliceIdentifier" type = "xsd:integer">
						<xsd:annotation/>
					</xsd:element>
					<xsd:element name = "sliceVersion" type = "xsd:decimal">
						<xsd:annotation/>
					</xsd:element>
					<xsd:element name = "value" type = "xsd:decimal">
						<xsd:annotation/>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:schema>
		<xsd:schema attributeFormDefault = "unqualified" elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/aggregation/model/traditionallife/policy/detail" xmlns = "http://www.bsb.com/is/xml/aggregation/model/traditionallife/policy/detail" xmlns:bill = "http://www.bsb.com/is/xml/core/model/bill" xmlns:cla = "http://www.bsb.com/is/xml/core/model/claim" xmlns:covpri = "http://www.bsb.com/is/xml/traditionallife/model/policy/detail/composition" xmlns:customrule = "http://www.bsb.com/is/xml/core/model/customrule" xmlns:doc = "http://www.bsb.com/is/xml/core/model/document" xmlns:ecc = "http://www.bsb.com/is/xml/traditionallife/model/offer/endorsedclausecompositor" xmlns:gen = "http://www.bsb.com/is/xml/traditionallife/model/policy/detail/general" xmlns:ind = "http://www.bsb.com/is/xml/core/model/indexation" xmlns:ops = "http://www.bsb.com/is/xml/core/model/endorsement" xmlns:plo = "http://www.bsb.com/is/xml/core/model/policy/policyloan" xmlns:pro = "http://www.bsb.com/is/xml/traditionallife/model/projection" xmlns:role = "http://www.bsb.com/is/xml/core/model/role/policy" xmlns:tcl = "http://www.bsb.com/is/xml/traditionallife/model/clause" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/role/policy"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/bill"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/indexation"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/policy/policyloan"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/claim"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/endorsement"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/document"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/traditionallife/model/policy/detail"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/traditionallife/model/policy/detail/general"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/traditionallife/model/policy/detail/composition"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/traditionallife/model/clause"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/traditionallife/model/policy/endorsement/detail"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/traditionallife/model/projection"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/traditionallife/model/offer/endorsedclausecompositor"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/customrule"/>
			<xsd:complexType name = "TradLifePolicyAggregatedDetail">
				<xsd:sequence>
					<xsd:element minOccurs = "0" name = "generalInformation" type = "gen:TradLifePolicyGeneral"/>
					<xsd:element minOccurs = "0" name = "coveragePricing" type = "covpri:TradLifePolicyComposition"/>
					<xsd:element minOccurs = "0" name = "roles" type = "role:PolicyRoleList"/>
					<xsd:element minOccurs = "0" name = "clauses" type = "tcl:TradLifeClauseList"/>
					<xsd:element minOccurs = "0" name = "exclusionClauses" type = "ecc:EndorsedClauseCompositorList"/>
					<xsd:element minOccurs = "0" name = "bills" type = "bill:BillShortDescriptionList"/>
					<xsd:element minOccurs = "0" name = "currentIndexation" type = "ind:Indexation"/>
					<xsd:element minOccurs = "0" name = "policyLoans" type = "plo:PolicyLoanList"/>
					<xsd:element minOccurs = "0" name = "claims" type = "cla:ClaimShortDescriptionList"/>
					<xsd:element minOccurs = "0" name = "projection" type = "pro:TraditionalLifeProjection"/>
					<xsd:element minOccurs = "0" name = "endorsements" type = "ops:EndorsementShortDescriptionList"/>
					<xsd:element minOccurs = "0" name = "generatedDocuments" type = "doc:DocumentList"/>
					<xsd:element minOccurs = "0" name = "customRuleList" type = "customrule:CustomRuleList"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "detailType" type = "detailType"/>
			<xsd:simpleType name = "detailType">
				<xsd:restriction base = "xsd:NMTOKEN">
					<xsd:enumeration value = "GENERAL_INFORMATION"/>
					<xsd:enumeration value = "COVERAGE_PRICING"/>
					<xsd:enumeration value = "COVERAGE"/>
					<xsd:enumeration value = "ROLES"/>
					<xsd:enumeration value = "CLAUSES"/>
					<xsd:enumeration value = "EXCLUSION_CLAUSES"/>
					<xsd:enumeration value = "BILLING"/>
					<xsd:enumeration value = "PROJECTIONS"/>
					<xsd:enumeration value = "OPERATIONS"/>
					<xsd:enumeration value = "CLAIMS"/>
					<xsd:enumeration value = "POLICY_LOANS"/>
					<xsd:enumeration value = "INDEXATION"/>
					<xsd:enumeration value = "GENERATED_DOCUMENT"/>
					<xsd:enumeration value = "CUSTOM_RULES"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:element name = "detailTypeList" type = "detailTypeList"/>
			<xsd:complexType name = "detailTypeList">
				<xsd:sequence>
					<xsd:element maxOccurs = "unbounded" minOccurs = "0" name = "detailType" type = "detailType"/>
				</xsd:sequence>
			</xsd:complexType>
		</xsd:schema>
		<xsd:schema elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/traditionallife/service/policy/detail" xmlns = "http://www.bsb.com/is/xml/traditionallife/service/policy/detail" xmlns:agg = "http://www.bsb.com/is/xml/aggregation/model/traditionallife/policy/detail" xmlns:pol = "http://www.bsb.com/is/xml/traditionallife/model/policy" xmlns:rep = "http://www.bsb.com/is/xml/core/model/util/report" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:import namespace = "http://www.bsb.com/is/xml/core/model/util/report"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/traditionallife/model/policy"/>
			<xsd:import namespace = "http://www.bsb.com/is/xml/aggregation/model/traditionallife/policy/detail"/>
			<xsd:element name = "TradLifePolicyAggregatedDetailRequest">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name = "policyRef" type = "pol:TradLifePolicyRef"/>
						<xsd:element name = "detailFilter" type = "detailFilter">
							<xsd:annotation>
								<xsd:documentation>Filter to select which details to retreive from individual calls
                            to other (atomic) web service operations. This can save a lot of
                            time.
								</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element maxOccurs = "1" minOccurs = "0" name = "exclusionClausesConfidentialityLevel" type = "xsd:string"/>
						<xsd:element maxOccurs = "1" minOccurs = "0" name = "includeEndorsedBaseCapitalValues" type = "xsd:boolean"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name = "detailFilter" type = "detailFilter"/>
			<xsd:complexType name = "detailFilter">
				<xsd:choice>
					<xsd:element name = "noFilter">
						<xsd:annotation>
							<xsd:documentation>Do not filter, get them all</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element ref = "agg:detailTypeList"/>
				</xsd:choice>
			</xsd:complexType>
			<xsd:element name = "TradLifePolicyAggregatedDetailResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name = "report" type = "rep:Report"/>
						<xsd:element maxOccurs = "1" minOccurs = "0" name = "aggregatedPolicyDetails" type = "agg:TradLifePolicyAggregatedDetail"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:schema>
		<xs:schema attributeFormDefault = "unqualified" elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/model/common-types/1" xmlns = "http://www.bsb.com/model/common-types/1" xmlns:tns = "http://www.bsb.com/model/common-types/1" xmlns:xs = "http://www.w3.org/2001/XMLSchema">
			<xs:annotation>
				<xs:documentation>            Common XSD files. This file contains:
            - Description of properties: a map associating a property and a value
            (a long, an int, a boolean, a date, or a string).
        
				</xs:documentation>
			</xs:annotation>
			<xs:element name = "map" type = "map">
				<xs:key name = "uniqueMapEntryKey">
					<xs:selector xpath = "*"/>
					<xs:field xpath = "@key"/>
				</xs:key>
			</xs:element>
			<xs:element abstract = "true" name = "abstractMap" type = "map">
				<xs:key name = "abstractUniqueMapEntryKey">
					<xs:selector xpath = "*"/>
					<xs:field xpath = "@key"/>
				</xs:key>
			</xs:element>
			<xs:complexType name = "map">
				<xs:annotation>
					<xs:documentation>                Definition of a map type: a set of associations between a string and an object.
            
					</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:choice maxOccurs = "unbounded" minOccurs = "0">
						<xs:element name = "string-entry">
							<xs:complexType>
								<xs:annotation>
									<xs:documentation>                                Definition of a map entry where the value is a string.
                            
									</xs:documentation>
								</xs:annotation>
								<xs:simpleContent>
									<xs:extension base = "xs:string">
										<xs:attribute name = "key" type = "xs:string" use = "required"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name = "int-entry">
							<xs:complexType>
								<xs:annotation>
									<xs:documentation>                                Definition of a map entry where the value is an integer.
                            
									</xs:documentation>
								</xs:annotation>
								<xs:simpleContent>
									<xs:extension base = "xs:int">
										<xs:attribute name = "key" type = "xs:string" use = "required"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name = "long-entry">
							<xs:complexType>
								<xs:annotation>
									<xs:documentation>                                Definition of a map entry where the value is a long.
                            
									</xs:documentation>
								</xs:annotation>
								<xs:simpleContent>
									<xs:extension base = "xs:long">
										<xs:attribute name = "key" type = "xs:string" use = "required"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name = "double-entry">
							<xs:complexType>
								<xs:annotation>
									<xs:documentation>                                Definition of a map entry where the value is a double.
                            
									</xs:documentation>
								</xs:annotation>
								<xs:simpleContent>
									<xs:extension base = "xs:double">
										<xs:attribute name = "key" type = "xs:string" use = "required"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name = "date-entry">
							<xs:complexType>
								<xs:annotation>
									<xs:documentation>                                Definition of a map entry where the value is a date.
                            
									</xs:documentation>
								</xs:annotation>
								<xs:simpleContent>
									<xs:extension base = "xs:dateTime">
										<xs:attribute name = "key" type = "xs:string" use = "required"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name = "boolean-entry">
							<xs:complexType>
								<xs:annotation>
									<xs:documentation>                                Definition of a map entry where the value is a boolean.
                            
									</xs:documentation>
								</xs:annotation>
								<xs:simpleContent>
									<xs:extension base = "xs:boolean">
										<xs:attribute name = "key" type = "xs:string" use = "required"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
					</xs:choice>
				</xs:sequence>
			</xs:complexType>
			<xs:element name = "properties" type = "properties">
				<xs:key name = "uniquePropertyKey">
					<xs:selector xpath = "*"/>
					<xs:field xpath = "@key"/>
				</xs:key>
			</xs:element>
			<xs:complexType name = "properties">
				<xs:annotation>
					<xs:documentation>                Definition of a property entry: a set of associations between a string and a string.
            
					</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element maxOccurs = "unbounded" minOccurs = "0" name = "entry" type = "property"/>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name = "property">
				<xs:annotation>
					<xs:documentation>                Definition of a property.
            
					</xs:documentation>
				</xs:annotation>
				<xs:simpleContent>
					<xs:extension base = "xs:string">
						<xs:attribute name = "key" type = "xs:string" use = "required"/>
					</xs:extension>
				</xs:simpleContent>
			</xs:complexType>
		</xs:schema>
		<xsd:schema elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/sf/exceptions/1" xmlns = "http://www.bsb.com/sf/exceptions/1" xmlns:common = "http://www.bsb.com/model/common-types/1" xmlns:xsd = "http://www.w3.org/2001/XMLSchema" xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation = "http://www.bsb.com/model/common-types/1 http://www.bsb.com/schemas/model/common-types-1.0.xsd">
			<xsd:import namespace = "http://www.bsb.com/model/common-types/1"/>
			<xsd:complexType name = "SimpleExceptionDetail">
				<xsd:annotation>
					<xsd:documentation>                The most basic representation of an exception occurred when calling a service.
            
					</xsd:documentation>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element minOccurs = "0" name = "actionMessage" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "business" type = "xsd:boolean"/>
					<xsd:element minOccurs = "0" name = "code" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "descriptionMessage" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "summaryMessage" type = "xsd:string"/>
					<xsd:element minOccurs = "0" name = "timestamp" type = "xsd:dateTime"/>
					<xsd:element minOccurs = "0" name = "recoverable" type = "xsd:boolean"/>
					<xsd:element minOccurs = "0" name = "namedParameters" type = "common:map"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name = "SimpleExceptionDetail" type = "SimpleExceptionDetail"/>
			<xsd:complexType name = "SfExceptionDetail">
				<xsd:complexContent>
					<xsd:annotation>
						<xsd:documentation>                    An SF exception detail is an extension of the simple exception details providing information
                    more accurate information (that can lead to security issues).
                
						</xsd:documentation>
					</xsd:annotation>
					<xsd:extension base = "SimpleExceptionDetail">
						<xsd:sequence>
							<xsd:element minOccurs = "0" name = "contextualInformation" type = "xsd:string"/>
							<xsd:element minOccurs = "0" name = "stackTrace" type = "xsd:string"/>
							<xsd:element minOccurs = "0" name = "user" type = "xsd:string"/>
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:element name = "SfExceptionDetail" type = "SfExceptionDetail"/>
		</xsd:schema>
		<xsd:schema attributeFormDefault = "unqualified" elementFormDefault = "qualified" targetNamespace = "http://www.bsb.com/is/xml/core/model/util/exception" xmlns = "http://www.bsb.com/is/xml/core/model/util/exception" xmlns:sf = "http://www.bsb.com/sf/exceptions/1" xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
			<xsd:import namespace = "http://www.bsb.com/sf/exceptions/1"/>
			<xsd:complexType name = "SolifeExceptionDetail">
				<xsd:complexContent>
					<xsd:extension base = "sf:SimpleExceptionDetail">
						<xsd:sequence>
							<xsd:element minOccurs = "0" name = "contextualInformation" type = "xsd:string"/>
							<xsd:element minOccurs = "0" name = "user" type = "xsd:string"/>
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:element name = "SolifeExceptionDetail" type = "SolifeExceptionDetail"/>
		</xsd:schema>
	</wsdl:types>
	<wsdl:message name = "GetPolicyDetailsLifeInsurance_1_Request">
		<wsdl:part element = "ns5:GetPolicyDetailsLifeInsuranceRequest" name = "GetPolicyDetailsLifeInsurance_1_Request_body"/>
	</wsdl:message>
	<wsdl:message name = "GetPolicyDetailsLifeInsurance_1_Response">
		<wsdl:part element = "ns5:GetPolicyDetailsLifeInsuranceResponse" name = "GetPolicyDetailsLifeInsurance_1_Response_body"/>
	</wsdl:message>
	<wsdl:message name = "GetPolicyDetailsLifeInsurance_1_Fault">
		<wsdl:part element = "fault:SOAPFault" name = "Error"/>
	</wsdl:message>
	<wsdl:message name = "MessageHeader">
		<wsdl:part element = "ns6:MessageHeader" name = "header"/>
	</wsdl:message>
	<wsdl:portType name = "GetPolicyDetailsLifeInsurance_Interface_1">
		<wsdl:operation name = "GetPolicyDetailsLifeInsurance_1">
			<wsdl:input message = "tns:GetPolicyDetailsLifeInsurance_1_Request" name = "GetPolicyDetailsLifeInsurance_1_Request"/>
			<wsdl:output message = "tns:GetPolicyDetailsLifeInsurance_1_Response" name = "GetPolicyDetailsLifeInsurance_1_Response"/>
			<wsdl:fault message = "tns:GetPolicyDetailsLifeInsurance_1_Fault" name = "fault"/>
		</wsdl:operation>
	</wsdl:portType>
	<wsdl:binding name = "GetPolicyDetailsLifeInsurance_binding_1" type = "tns:GetPolicyDetailsLifeInsurance_Interface_1">
		<soap:binding style = "document" transport = "http://schemas.xmlsoap.org/soap/http"/>
		<wsdl:operation name = "GetPolicyDetailsLifeInsurance_1">
			<soap:operation soapAction = "GetPolicyDetailsLifeInsurance_1" style = "document"/>
			<wsdl:input name = "GetPolicyDetailsLifeInsurance_1_Request">
				<soap:body parts = "GetPolicyDetailsLifeInsurance_1_Request_body" use = "literal"/>
				<soap:header message = "tns:MessageHeader" part = "header" use = "literal"/>
			</wsdl:input>
			<wsdl:output name = "GetPolicyDetailsLifeInsurance_1_Response">
				<soap:body parts = "GetPolicyDetailsLifeInsurance_1_Response_body" use = "literal"/>
				<soap:header message = "tns:MessageHeader" part = "header" use = "literal"/>
			</wsdl:output>
			<wsdl:fault name = "fault">
				<soap:fault name = "fault" use = "literal"/>
			</wsdl:fault>
		</wsdl:operation>
	</wsdl:binding>
	<wsdl:service name = "LifeRetailCB_Policy_LifeRetailCBPolicy_3">
		<wsdl:port binding = "tns:GetPolicyDetailsLifeInsurance_binding_1" name = "GetPolicyDetailsLifeInsurance_1">
			<soap:address location = ""/>
			<jndi:context>
				<jndi:property name = "java.naming.factory.initial" type = "java.lang.String">com.tibco.tibjms.naming.TibjmsInitialContextFactory</jndi:property>
				<jndi:property name = "java.naming.provider.url" type = "java.lang.String">tibjmsnaming://TSTESBSMALLDC1:37222,tibjmsnaming://TSTESBSMALLDC2:37222</jndi:property>
			</jndi:context>
			<jms:connectionFactory>TLNHN_Queue_ConnectionFactory</jms:connectionFactory>
			<jms:targetAddress destination = "queue">ESB.LifeRetailCB.BS.Policy.LifeRetailCBPolicy.3.GetPolicyDetailsLifeInsurance.1.Request</jms:targetAddress>
		</wsdl:port>
	</wsdl:service>
</wsdl:definitions>